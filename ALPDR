{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":9167333,"sourceType":"datasetVersion","datasetId":5538595}],"dockerImageVersionId":30747,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","scrolled":true,"execution":{"iopub.status.busy":"2024-08-14T13:55:55.546464Z","iopub.execute_input":"2024-08-14T13:55:55.547115Z","iopub.status.idle":"2024-08-14T13:55:55.944331Z","shell.execute_reply.started":"2024-08-14T13:55:55.547083Z","shell.execute_reply":"2024-08-14T13:55:55.943426Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/alpdr-dataset/ALPDR_data/README.dataset.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/README.roboflow.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/data.yaml\n/kaggle/input/alpdr-dataset/ALPDR_data/custom_yolov5s.yaml\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars334_png.rf.22d6430b6300bce1a8919034fd91c0e2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars237_png.rf.fce3a06ede888ce4e715ee908bdfdd65.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars81_png.rf.40284ea827cce059db7e1a48c4361e7b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars289_png.rf.0cb1372aee173a07dab413f6085db8da.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars423_png.rf.873ed3f33d3f4c1b8b408758e6b4d61a.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars248_png.rf.c8012ad829c53bc6caf9d6eb870dc204.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars60_png.rf.8bf2ce54437feebc4c50186fa0a67fd0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars159_png.rf.a89d0f9c19122cbc6da0c2e28c37fbcf.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars14_png.rf.60043147b1fe02d909a79fa48a72537f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars383_png.rf.418b236ff42f5941c1df5b1d4d04aa16.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars158_png.rf.0c406371086b544f08035775c29f73ca.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars218_png.rf.988b30355f04b8e1a9996bb0239357a2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars206_png.rf.4867e799e0354e72789da334c31d598e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars249_png.rf.c0299cccabafd1de66dbbcf2d4a965d1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars244_png.rf.5b546ff505f349022671b21eb9da86f3.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars213_png.rf.62912002d9fd74582b7dd4bf6baa6dfb.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars142_png.rf.70ea347552f7aecba5953269e8902fd0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars411_png.rf.94135cb24556b13c95ed6eed357e7276.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars69_png.rf.984e0bef6f5ab7f2759b8387fad5a80f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars257_png.rf.b7451e3fc156306d76200f7be75de315.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars305_png.rf.b621d538608894d90b01bf9148bd395b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars421_png.rf.9dc293d5e3c2e15b666917813f7db4de.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars283_png.rf.a593cbda7aa8b5220a5ec4a25cef1874.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars119_png.rf.2a894b2399c7ac681d6af9cd402f4440.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars185_png.rf.1995e7deacd67025b0fbfa48a82beb5d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars356_png.rf.d287e07450581d02464f756620744066.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars240_png.rf.710d6d1b9784b068d68cc134888e132a.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars279_png.rf.a5e1f814193faa87f716c616fccc7ea0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars93_png.rf.95900198a8e7acab95738e853deb635b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars65_png.rf.6b4003899aafc3354d018d06a1d98a58.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars20_png.rf.28ab9eec1785dbe15fc12921cbac46cf.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars208_png.rf.62cdfc956c034fc4666ccf907f9913e8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars292_png.rf.03758e679ed117f056ab8f7af65016eb.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars121_png.rf.963abf5b2e4cd531cbd63192b1d21395.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars128_png.rf.4ac678c10f56cd256148842af1939785.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars224_png.rf.826622dd116fddfbc400a6bf7210f466.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars296_png.rf.5bd7567f89c3ef6e3bd98bead5bfe40b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars118_png.rf.5e0f6bf508d9325f913d6d652ee341f4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars311_png.rf.ad5a0baf9a5cb4307898f4ed2976d376.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars179_png.rf.5928c9345eb3baf583968844e950bb5b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars387_png.rf.38426665e0b0409f02e4d4a9e269e9fb.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars415_png.rf.27af240e3caf28fd02be4bc0ece7e2fb.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars125_png.rf.8388b3412a08b127452afb2bad5d926d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars236_png.rf.17b896b667f4b886f83206d1e338673d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars228_png.rf.b33888de9c580b0dc531db5eaa8b9f8c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars388_png.rf.ab1556edf7ed4f650ea3df0c518d7674.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars191_png.rf.e5fad29f572e086b083ae7c91bd88938.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars386_png.rf.382ee6526d6117de438dcf27164e10c2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars427_png.rf.884f9a73d15d8e832dc7b8b3cfdd0ab3.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars215_png.rf.6953bfc724cfb8a4836e63ee1992e889.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars403_png.rf.4b789bc094d0e1461599270225708de0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars417_png.rf.2a0067a77322d19bcaf943f080904990.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars25_png.rf.0750890105ea3b4b4e62931fe0bb4e1f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars338_png.rf.f8012ef31a77449f1b62c8d1b11fdd62.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars414_png.rf.fec7a50bc832919dd6d4199a551a4f0c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars413_png.rf.01262ca012f0d6f06e2c899377957bf2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars45_png.rf.f5443ea3a49f6ce199e16914e94fd7e8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars122_png.rf.82d6f228382e0e0260573a0424be8b9f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels/Cars146_png.rf.8d6580a32cff688b42367e2d551a937f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars206_png.rf.4867e799e0354e72789da334c31d598e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars311_png.rf.ad5a0baf9a5cb4307898f4ed2976d376.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars338_png.rf.f8012ef31a77449f1b62c8d1b11fdd62.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars118_png.rf.5e0f6bf508d9325f913d6d652ee341f4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars427_png.rf.884f9a73d15d8e832dc7b8b3cfdd0ab3.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars257_png.rf.b7451e3fc156306d76200f7be75de315.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars65_png.rf.6b4003899aafc3354d018d06a1d98a58.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars289_png.rf.0cb1372aee173a07dab413f6085db8da.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars185_png.rf.1995e7deacd67025b0fbfa48a82beb5d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars423_png.rf.873ed3f33d3f4c1b8b408758e6b4d61a.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars421_png.rf.9dc293d5e3c2e15b666917813f7db4de.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars414_png.rf.fec7a50bc832919dd6d4199a551a4f0c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars213_png.rf.62912002d9fd74582b7dd4bf6baa6dfb.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars159_png.rf.a89d0f9c19122cbc6da0c2e28c37fbcf.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars215_png.rf.6953bfc724cfb8a4836e63ee1992e889.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars179_png.rf.5928c9345eb3baf583968844e950bb5b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars20_png.rf.28ab9eec1785dbe15fc12921cbac46cf.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars25_png.rf.0750890105ea3b4b4e62931fe0bb4e1f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars122_png.rf.82d6f228382e0e0260573a0424be8b9f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars208_png.rf.62cdfc956c034fc4666ccf907f9913e8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars218_png.rf.988b30355f04b8e1a9996bb0239357a2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars158_png.rf.0c406371086b544f08035775c29f73ca.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars248_png.rf.c8012ad829c53bc6caf9d6eb870dc204.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars249_png.rf.c0299cccabafd1de66dbbcf2d4a965d1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars236_png.rf.17b896b667f4b886f83206d1e338673d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars240_png.rf.710d6d1b9784b068d68cc134888e132a.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars121_png.rf.963abf5b2e4cd531cbd63192b1d21395.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars93_png.rf.95900198a8e7acab95738e853deb635b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars244_png.rf.5b546ff505f349022671b21eb9da86f3.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars356_png.rf.d287e07450581d02464f756620744066.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars119_png.rf.2a894b2399c7ac681d6af9cd402f4440.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars125_png.rf.8388b3412a08b127452afb2bad5d926d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars417_png.rf.2a0067a77322d19bcaf943f080904990.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars60_png.rf.8bf2ce54437feebc4c50186fa0a67fd0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars386_png.rf.382ee6526d6117de438dcf27164e10c2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars411_png.rf.94135cb24556b13c95ed6eed357e7276.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars224_png.rf.826622dd116fddfbc400a6bf7210f466.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars81_png.rf.40284ea827cce059db7e1a48c4361e7b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars228_png.rf.b33888de9c580b0dc531db5eaa8b9f8c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars305_png.rf.b621d538608894d90b01bf9148bd395b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars279_png.rf.a5e1f814193faa87f716c616fccc7ea0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars45_png.rf.f5443ea3a49f6ce199e16914e94fd7e8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars415_png.rf.27af240e3caf28fd02be4bc0ece7e2fb.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars128_png.rf.4ac678c10f56cd256148842af1939785.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars237_png.rf.fce3a06ede888ce4e715ee908bdfdd65.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars388_png.rf.ab1556edf7ed4f650ea3df0c518d7674.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars191_png.rf.e5fad29f572e086b083ae7c91bd88938.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars69_png.rf.984e0bef6f5ab7f2759b8387fad5a80f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars296_png.rf.5bd7567f89c3ef6e3bd98bead5bfe40b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars283_png.rf.a593cbda7aa8b5220a5ec4a25cef1874.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars334_png.rf.22d6430b6300bce1a8919034fd91c0e2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars413_png.rf.01262ca012f0d6f06e2c899377957bf2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars292_png.rf.03758e679ed117f056ab8f7af65016eb.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars142_png.rf.70ea347552f7aecba5953269e8902fd0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars146_png.rf.8d6580a32cff688b42367e2d551a937f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars387_png.rf.38426665e0b0409f02e4d4a9e269e9fb.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars383_png.rf.418b236ff42f5941c1df5b1d4d04aa16.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars14_png.rf.60043147b1fe02d909a79fa48a72537f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/valid/images/Cars403_png.rf.4b789bc094d0e1461599270225708de0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars321_png.rf.7534e4295ef29432105ced2131818def.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars87_png.rf.6379912cc568246cecc0dc9a8992f68b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars98_png.rf.79819b2dedd47e0414f037458c5c84fd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars410_png.rf.0c7582d2f57eac3cd973ae71c886b2f8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars22_png.rf.2370fe644a1a67b3eb8a784ec99f5938.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars205_png.rf.9992d228b476f6b0972cd7b6d35afbc9.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars365_png.rf.d8ab71a7683f0596625a71eda7c40bd3.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars330_png.rf.e77abb29d84f129fd69519c4cb206041.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars130_png.rf.431fab74d4e8f74361beeeeb937f5958.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars193_png.rf.807725a32dcc64e2599581a4a6468fe4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars227_png.rf.449347e70a068d09bb96e4de2367b24f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars192_png.rf.13f49e972ed82074bcf7b2855236160e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars53_png.rf.3e6de03366fb2293356ded9d5ab7bc76.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars351_png.rf.fba89e9abeac211d263fd48b8c6cd42d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars160_png.rf.75ddca95372926115359820aea3c57f7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars49_png.rf.e09b8ac60524dcbe3d6e77424ab74f99.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars182_png.rf.db6f6312de42a1a64b90d07f59e68c65.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars127_png.rf.07d492b35170b4aec3a1cf5d7fe9acbc.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars114_png.rf.831fdfe093a05616fb8624b3e2fe7561.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars313_png.rf.db86b24121bc74a6ce96106a721d5fd0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars429_png.rf.bbbedf2314912d991a687c15d57b7bd4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars322_png.rf.1a637615991b34780d9690f5d611ea81.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars154_png.rf.b0034dda1083069845f5c98a01224209.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars392_png.rf.f54bdc63702e39521e25ae6653ed20fe.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars309_png.rf.3f284f1368a86cef554eba7c9e4b7bb8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars178_png.rf.0e0d4786ad18a88a12e85dcca7fe19a5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars310_png.rf.d685ccfbd7a95878b94d85c6846f8edf.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars177_png.rf.48d7de1d708b607dee3264f43103640f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars325_png.rf.caab2362762052447cffd5003a8f3e71.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/labels/Cars62_png.rf.c36a3a2334b5ffdb48b0d06ef37943b9.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars177_png.rf.48d7de1d708b607dee3264f43103640f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars205_png.rf.9992d228b476f6b0972cd7b6d35afbc9.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars321_png.rf.7534e4295ef29432105ced2131818def.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars192_png.rf.13f49e972ed82074bcf7b2855236160e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars392_png.rf.f54bdc63702e39521e25ae6653ed20fe.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars410_png.rf.0c7582d2f57eac3cd973ae71c886b2f8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars227_png.rf.449347e70a068d09bb96e4de2367b24f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars351_png.rf.fba89e9abeac211d263fd48b8c6cd42d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars429_png.rf.bbbedf2314912d991a687c15d57b7bd4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars154_png.rf.b0034dda1083069845f5c98a01224209.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars182_png.rf.db6f6312de42a1a64b90d07f59e68c65.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars49_png.rf.e09b8ac60524dcbe3d6e77424ab74f99.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars160_png.rf.75ddca95372926115359820aea3c57f7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars130_png.rf.431fab74d4e8f74361beeeeb937f5958.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars325_png.rf.caab2362762052447cffd5003a8f3e71.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars114_png.rf.831fdfe093a05616fb8624b3e2fe7561.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars98_png.rf.79819b2dedd47e0414f037458c5c84fd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars22_png.rf.2370fe644a1a67b3eb8a784ec99f5938.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars127_png.rf.07d492b35170b4aec3a1cf5d7fe9acbc.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars193_png.rf.807725a32dcc64e2599581a4a6468fe4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars178_png.rf.0e0d4786ad18a88a12e85dcca7fe19a5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars310_png.rf.d685ccfbd7a95878b94d85c6846f8edf.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars313_png.rf.db86b24121bc74a6ce96106a721d5fd0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars365_png.rf.d8ab71a7683f0596625a71eda7c40bd3.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars309_png.rf.3f284f1368a86cef554eba7c9e4b7bb8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars330_png.rf.e77abb29d84f129fd69519c4cb206041.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars87_png.rf.6379912cc568246cecc0dc9a8992f68b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars62_png.rf.c36a3a2334b5ffdb48b0d06ef37943b9.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars322_png.rf.1a637615991b34780d9690f5d611ea81.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars53_png.rf.3e6de03366fb2293356ded9d5ab7bc76.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars264_png.rf.3707b3d9b5e287fb305f99176680e504.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars374_png.rf.8a49905013e2acb3ed2ccb2244cbcf04.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars375_png.rf.b8557884e9529e47fb8b26fe7a72edd5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars219_png.rf.83657436bd3ae4fdf6d7d305f8c85daa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars120_png.rf.daec97a7255a956a9686e8ca38478be2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars360_png.rf.66569694692e5f7abda07855cd4a3cba.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars204_png.rf.c7ef33d9799c8bf35aa35e5d5bad3b67.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars252_png.rf.312dfe134e74b4b4362fb7e5fa76d0f1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars12_png.rf.1a67a71001ed3b7044db2582e3e04957.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars115_png.rf.9c8bec44c1dd836f251d8ca3d956ba47.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars196_png.rf.b76dacd9dc443ce9a64713a5b8103c1f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars27_png.rf.b18f1097fe206fc2a21b21347e6825c1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars186_png.rf.c0cd64bb7ccc9422cbf15fdf9c8a7dea.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars157_png.rf.d57d445fa261f949cddc249b71c3e616.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars256_png.rf.43b4e7dbfc4d7b1aae5e021184ccd308.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars10_png.rf.4910606b6c18877dec46058bc94d3a5a.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars111_png.rf.d435f72caf90a260936de406ac5a7066.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars126_png.rf.bfd5f9815b4e291424955118ad6e09cd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars44_png.rf.4f2d7b1f08562400f2de19c73588df5a.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars352_png.rf.1db0c309f9dea49ce9c6ce6594d3c811.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars112_png.rf.cb22d420f56f997ec1eb4d61fd6ad06b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars404_png.rf.d2375acfd4d5208f9359b7bdacb8a7ec.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars116_png.rf.f1715072b181ba16b0dbf9d8f1fe9141.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars251_png.rf.3c13c23bce489c0ff9e0f733f7befbdc.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars269_png.rf.83feff5e40276cf355d92120bffd37aa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars396_png.rf.24568d3dd8ff07e6f93768037d59ff62.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars165_png.rf.e46a4b518a26638f7df57161eb61e664.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars166_png.rf.a90204071f9cb9cd10f1e0a72f5c66f4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars350_png.rf.25fc78848043df76ea0d3eff55a37b07.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars345_png.rf.24572b4c905ed646d89111006760877c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars378_png.rf.da7743e4d54b8a7c3d414b797f200d5f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars167_png.rf.428572fc467d95963d104295d0b8fca3.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars225_png.rf.84d76f172ac36d000c5e9a69743910a1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars77_png.rf.f78fb24b2a27deb51d2323f2c521ccec.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars394_png.rf.be691065687c5bbb20e0a1c91cc379a9.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars307_png.rf.3b49c7ac0a9e0b95a4df04c0c78feabd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars267_png.rf.929dda10471b6cfb6e2ede3a12cdeffd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars156_png.rf.219a56e1e4f9495b1230b3dcee7be0be.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars238_png.rf.649d21a9eb587adba3811ee72469d31a.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars343_png.rf.5af7c6e9d4574bbb3bab52219c521198.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars139_png.rf.8d5493449ac3d5a513d4ba57c387cc50.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars407_png.rf.85c01457bc60fd9cba4c0131accd1240.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars83_png.rf.ea4d745862c6a2dbd326e8fab72df033.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars184_png.rf.65b3eab420bb410f4c60ba3ace1f4cda.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars294_png.rf.c2780f6a4eb99b31c68f8e11cf823f0e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars253_png.rf.4dc14192be8c3c5ee09b90a4a0ac11a2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars281_png.rf.05fb5fc99f4ec7cf9dd3eb3712093c07.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars209_png.rf.923c7406f4f2a8d1923fd064bfb8115c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars349_png.rf.e8e7b74c34ffa101b99e8c4c017d5206.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars88_png.rf.6831b8e5174662daa690180bd609047e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars314_png.rf.137b215d364bc7b7562dd5847f5985f7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars232_png.rf.50d939597f8f36e57ef0a3dd4335108c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars86_png.rf.f618981d28eb7bddc4f52b5504e79225.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars85_png.rf.04a0b2c405f87982bb54d740c7f03a82.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars265_png.rf.e009f7b38968ffebc01cce79a9728d7c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars132_png.rf.4f75c46ca19a81d7795a8a83d7276f22.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars408_png.rf.eedec6a3114ebe42ae0228f7fd70c6cd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars108_png.rf.5aead004c4de1a8c5e9d4f4311f79a13.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars390_png.rf.d00faa23707281e0d7238ba4dbb54583.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars362_png.rf.d3473c576d9b130da10f96fdcdb55ab4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars380_png.rf.915053dfa299303b6c67d348dd7d32f1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars344_png.rf.3e060f9eca4d39295eb9e3d268384d95.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars235_png.rf.9f8dd7a7c1f71701c90d40f2c76bf24b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars260_png.rf.665e8dd6c75cda1ef31c9263905187b0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars355_png.rf.09ff7e060930691bb6d1f64431024b41.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars141_png.rf.7d3e6f5da10dba13a603fd2aa40ea6a5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars140_png.rf.fdc82dbb250a6066becc1c9242ca2ac4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars233_png.rf.d0a435b0b918da184d9d81025f3f8e52.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars277_png.rf.f85525b89bd7132836f5fbbd73f0c432.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars431_png.rf.f23df4768633eec7f368ec9e56528c58.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars373_png.rf.f75be9acc7950061eb3a4f3e17dd01fa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars372_png.rf.e36f8bd629fd23c7ab1623fa9f1da4e8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars39_png.rf.fc6fe15c7312e74c2dfc4a4d2e99d6ec.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars220_png.rf.a562540045c9714e17d420348c0f97cc.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars381_png.rf.8d91ab72b065f72a62a05bfb068c2cce.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars76_png.rf.547c190c9c2dbe005c815492d75df1fd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars90_png.rf.2793e6ee38d9b8eada31e36561b97b8e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars382_png.rf.c4fde8aea12ac89425e6d3445d480d74.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars71_png.rf.8d16877dc28a48ff32ea07aaa1d00e86.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars110_png.rf.e8e16ebff990765c8f4a217095166301.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars59_png.rf.96d9a87ef5575eac82f2235b3627b376.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars181_png.rf.596158f90fe25b254e6c03928c44b6d8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars21_png.rf.9444a158ccaf97bb8e3ea1e1ff3777e9.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars319_png.rf.8083ebf2a50351c0907e5d97fa68729f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars255_png.rf.71bb669d5216cd8057dec245429dd468.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars271_png.rf.cb85f3804d8d7830ab48c805eb28f9cf.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars190_png.rf.73eabb4364c8c9b10e813bfe826d768c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars75_png.rf.964bae0a48d09f1cd2a3d3ef5d608143.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars422_png.rf.0ed51126238c833d1ea6e39815bb7a8f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars164_png.rf.373e865f41b0bb6a8d49db7ce26825bd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars340_png.rf.5b1b8633e3192f0997697fa044064f06.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars315_png.rf.00aec170eca7b5bfda80413f3a7dd319.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars100_png.rf.698f8ec69a46f58146c00238bd5e842c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars144_png.rf.b1b9cd984087f025f275693761b7bef8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars123_png.rf.de1f89c3f494f7f536926aa6753e6f0f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars19_png.rf.e657a8eb8c4ed0d4d9a66bb5c049ab7d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars337_png.rf.2829977dd4a27f08857552c132e88b89.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars229_png.rf.2bc9e8df2408364107cca3e1ca0f4546.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars405_png.rf.b9dd9232f49d1e3f20ab722aab0afd8c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars109_png.rf.9f1a6825dd1b1e758cb8e91b9984de7f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars290_png.rf.1dc99a23df27ecdd26b278b6e3a7fad5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars16_png.rf.3849f60b6b37b3e91ed723b6bbe471ca.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars63_png.rf.1b5174369aba3c7bc22802e752da6fa7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars104_png.rf.62adcb6b1dcf67e100c35a759e5c9990.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars70_png.rf.62767a7ee142b24a283297aa9b165589.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars7_png.rf.6ff7f1b6c4941856a93d5f3da8bd1d59.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars347_png.rf.054b6e622e2ffe193c0ab40a7f91ec11.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars291_png.rf.96f1c6ba5d42fd7750c95553e52c55ae.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars323_png.rf.12078981454bbbd706af3958033c7220.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars295_png.rf.3e1b90a9fd30f37ae43380d44b1dbbbd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars173_png.rf.a2ba2de6b6e46d4c8a824953ddb82675.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars298_png.rf.67761aef6995faa2ccbf2035daaabd46.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars358_png.rf.0f6be47bcf48c22813b1b13b1e6346dd.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars183_png.rf.005c6be49001244049aba9b1373416f4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars37_png.rf.e39f7b9a1553e41f4782ac5abf1263b7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars102_png.rf.b87bd8032838cdbb344f7f95ebec933f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars151_png.rf.36eccafc93728995cc4468bfa3882ad7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars331_png.rf.528f036330c84c39d18f3b20d3963b23.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars231_png.rf.552ee4360a98de7e7d517b39cd95f049.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars150_png.rf.4a35ab46fa229e214847a0fd93ee8bac.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars312_png.rf.d94fc1259cbb89b83a3eef3aae66d4ef.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars134_png.rf.e03d362ad3dffcb2dabda7bdba8e2313.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars316_png.rf.10302773e9a70c77f7a2641a4f6b6d29.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars117_png.rf.cbfc5b93c68254e8c463db61129d0a9f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars113_png.rf.4bb772f27fcbaceddc489b2ee1a48dda.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars38_png.rf.958c1ec7296cbe68ef8a706b6fa6e078.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars168_png.rf.2a254b51034a68aad40600c42f391b07.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars67_png.rf.d1e451aef06d540ae91573635411da0e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars174_png.rf.197bba0f4869aa2a784477499d00ad8f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars280_png.rf.8eb3e457939c60e54600593fd1924ad4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars268_png.rf.c708bda462cd62bf1e8bc3a047f365d9.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars64_png.rf.24fb7df58bf7fd800f5db483a836c4f4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars195_png.rf.902193a20b0a1c82dd0c588454d01cff.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars363_png.rf.a49d3ec19142436c8aec8a79558c967b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars133_png.rf.2021480641a8e06a947194aa22b8ff87.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars148_png.rf.20e9088a25072dd35e38128cc1b32736.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars241_png.rf.8148fb8f153b1d4b6d19fb7dab2b9a20.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars207_png.rf.552dd19f9173b7cded8bb739b8fb1018.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars391_png.rf.8e1f759520646f494962d996f76a1f43.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars306_png.rf.bcb89cfa13ca9dbb7b8e8f0a40583f75.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars162_png.rf.9b7777c4700ec3958e801d7a7c9d483c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars175_png.rf.de900c8ed5f932df146c613c85544dc1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars416_png.rf.df1fec18af3fc99c4313baa3a4e99e21.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars2_png.rf.43f4ab5454faa7edf5120bee8dd503c6.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars278_png.rf.23c1c36ec020e471fd4e4423bdc71f14.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars149_png.rf.cfbb11fbe3724d67bfd19b2411e78fec.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars137_png.rf.2cd810e38b68ce3c8558525dd8e75922.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars329_png.rf.df17afa1658dc4139ae04e12c34f75b6.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars41_png.rf.44f11bc48608952a3f2c688d78e54faa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars23_png.rf.bc9edb3e6f64e6154c7dc08b92fd8c88.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars261_png.rf.579bc198ca7152f5c34d6ea4e2fa56c6.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars54_png.rf.2a7650ac759b47e2d1c78f75396589d8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars234_png.rf.ee0893945113b268c293758d056026bc.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars199_png.rf.a95a812e3c033df184bbd56b7d1a9f3d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars129_png.rf.a68004929bf4e4836909e7aefac63af1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars243_png.rf.72301c8fbad2029a004a3dd475693b5f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars409_png.rf.e1e74b651a2343c31c33acba3a629ff7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars379_png.rf.1aee6b7280351561ce63f7eb8a7644c2.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars28_png.rf.21438334fd3dc755c5af26841e6c9640.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars263_png.rf.f9e89732a9db461e388846fd669c4498.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars214_png.rf.98972e474badc32807d2c187f2a6cd3f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars105_png.rf.17b769d6c41b747ed37c4188f9ea4587.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars221_png.rf.380b224f2fe222544cd10aa03e5df70e.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars194_png.rf.e81882e6b6cbeb2550911d73e470ef90.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars302_png.rf.690a92e28120c814740d6cfc99519d63.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars11_png.rf.04c05a0f0d4654b768a9060e9484995c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars371_png.rf.a8ef8628f4002122a812442ab75dddb3.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars138_png.rf.8f72e87c528631da63a74161d4a0ca96.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars211_png.rf.0288314d96a46bba6bc5b3051c6b9ad8.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars13_png.rf.9053a888e5f473ac75324f6130c09f3b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars262_png.rf.cca00e64b11aacfd4e32ee7992ce7ebc.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars163_png.rf.4cd03a71c06eef94fbaca98c99fa998c.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars176_png.rf.2b7a00cc4d5688b3b69ab6a7b8decc02.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars286_png.rf.0c52951e07749b01cc31e7ea87e94c9f.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars223_png.rf.2daaed6f0ed520d492ee6eb878217409.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars135_png.rf.c9b9ba77cbaefb6592add6a4f4824ef4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars0_png.rf.7b732cb6c2488c131a33ed26e0c953d5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars124_png.rf.13260183a153c22be51a8dc1f4bcc578.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars354_png.rf.70c4bd2757f181aacdf46a8b0f638a14.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars246_png.rf.aa61bbdf0a2cff5a6810b45d490272fb.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars254_png.rf.b450ee3c1d7332d904f00d9b6f6c1ea7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars170_png.rf.916ae9be9ea8a22409f9f72a720ca2c5.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars89_png.rf.baf4f342c3da0793f7baad6b94c6ff95.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars212_png.rf.2f85659355feddec3dfba08308384886.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars107_png.rf.da1a419d71c2b98de2c7be41e9d131f7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars143_png.rf.3e2e81ea69d56be195962c1f4d7044aa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars155_png.rf.80a242f5fcbf88660086906d5e820210.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars15_png.rf.d943c2636a3510ed81ecd5c496589eed.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars1_png.rf.c38e85fd6feeba28d3e3f0d897ed3fa0.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars304_png.rf.1012e65bc2aec05efbb75eb15630a4fa.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars299_png.rf.832dce65dce5912faa8941e10b7e1253.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars258_png.rf.fc475501bdef2783fb9fa55c056c7a5d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars270_png.rf.210a17a5fe77ec2ca9c2aea47c727df4.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars152_png.rf.d59e34b1850362809d2b21254cb70be6.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars384_png.rf.0974bc458bd55d4bd6ee0e10486e434d.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars301_png.rf.e5068228a0e6297ba9925f77890a1d74.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars226_png.rf.70ad8cf78060a98621be2f7dff078f78.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars172_png.rf.660c0f68b4adb653bb1f80b603612b58.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars202_png.rf.ba43680d5fb612ed7b275adf0d457213.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars430_png.rf.038bfe4cc7d189cc509f92dbd9b80088.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars272_png.rf.d0184b631bc3210d141079336153f3ce.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars6_png.rf.927e65785f4aac61877d888446b04ba7.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars359_png.rf.699fd293ace6982431077d5e1fa7ac95.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars17_png.rf.76afc6d60bfe1e9a2c5b20c34c69c9d1.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars106_png.rf.286d87d553ddba7973ee5904709fcc6b.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars275_png.rf.e11cedece5c9b177d4aa0a62b5c05b13.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/labels/Cars136_png.rf.d7411657d202e5c307b5eb66be004347.txt\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars359_png.rf.699fd293ace6982431077d5e1fa7ac95.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars107_png.rf.da1a419d71c2b98de2c7be41e9d131f7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars109_png.rf.9f1a6825dd1b1e758cb8e91b9984de7f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars207_png.rf.552dd19f9173b7cded8bb739b8fb1018.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars17_png.rf.76afc6d60bfe1e9a2c5b20c34c69c9d1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars261_png.rf.579bc198ca7152f5c34d6ea4e2fa56c6.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars223_png.rf.2daaed6f0ed520d492ee6eb878217409.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars165_png.rf.e46a4b518a26638f7df57161eb61e664.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars347_png.rf.054b6e622e2ffe193c0ab40a7f91ec11.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars54_png.rf.2a7650ac759b47e2d1c78f75396589d8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars138_png.rf.8f72e87c528631da63a74161d4a0ca96.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars349_png.rf.e8e7b74c34ffa101b99e8c4c017d5206.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars225_png.rf.84d76f172ac36d000c5e9a69743910a1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars362_png.rf.d3473c576d9b130da10f96fdcdb55ab4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars176_png.rf.2b7a00cc4d5688b3b69ab6a7b8decc02.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars174_png.rf.197bba0f4869aa2a784477499d00ad8f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars77_png.rf.f78fb24b2a27deb51d2323f2c521ccec.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars384_png.rf.0974bc458bd55d4bd6ee0e10486e434d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars133_png.rf.2021480641a8e06a947194aa22b8ff87.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars167_png.rf.428572fc467d95963d104295d0b8fca3.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars262_png.rf.cca00e64b11aacfd4e32ee7992ce7ebc.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars390_png.rf.d00faa23707281e0d7238ba4dbb54583.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars108_png.rf.5aead004c4de1a8c5e9d4f4311f79a13.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars315_png.rf.00aec170eca7b5bfda80413f3a7dd319.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars264_png.rf.3707b3d9b5e287fb305f99176680e504.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars86_png.rf.f618981d28eb7bddc4f52b5504e79225.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars343_png.rf.5af7c6e9d4574bbb3bab52219c521198.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars277_png.rf.f85525b89bd7132836f5fbbd73f0c432.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars232_png.rf.50d939597f8f36e57ef0a3dd4335108c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars199_png.rf.a95a812e3c033df184bbd56b7d1a9f3d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars405_png.rf.b9dd9232f49d1e3f20ab722aab0afd8c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars16_png.rf.3849f60b6b37b3e91ed723b6bbe471ca.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars394_png.rf.be691065687c5bbb20e0a1c91cc379a9.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars172_png.rf.660c0f68b4adb653bb1f80b603612b58.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars28_png.rf.21438334fd3dc755c5af26841e6c9640.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars407_png.rf.85c01457bc60fd9cba4c0131accd1240.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars59_png.rf.96d9a87ef5575eac82f2235b3627b376.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars268_png.rf.c708bda462cd62bf1e8bc3a047f365d9.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars314_png.rf.137b215d364bc7b7562dd5847f5985f7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars136_png.rf.d7411657d202e5c307b5eb66be004347.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars112_png.rf.cb22d420f56f997ec1eb4d61fd6ad06b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars212_png.rf.2f85659355feddec3dfba08308384886.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars143_png.rf.3e2e81ea69d56be195962c1f4d7044aa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars246_png.rf.aa61bbdf0a2cff5a6810b45d490272fb.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars13_png.rf.9053a888e5f473ac75324f6130c09f3b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars281_png.rf.05fb5fc99f4ec7cf9dd3eb3712093c07.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars235_png.rf.9f8dd7a7c1f71701c90d40f2c76bf24b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars372_png.rf.e36f8bd629fd23c7ab1623fa9f1da4e8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars375_png.rf.b8557884e9529e47fb8b26fe7a72edd5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars27_png.rf.b18f1097fe206fc2a21b21347e6825c1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars344_png.rf.3e060f9eca4d39295eb9e3d268384d95.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars312_png.rf.d94fc1259cbb89b83a3eef3aae66d4ef.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars331_png.rf.528f036330c84c39d18f3b20d3963b23.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars256_png.rf.43b4e7dbfc4d7b1aae5e021184ccd308.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars11_png.rf.04c05a0f0d4654b768a9060e9484995c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars286_png.rf.0c52951e07749b01cc31e7ea87e94c9f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars378_png.rf.da7743e4d54b8a7c3d414b797f200d5f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars319_png.rf.8083ebf2a50351c0907e5d97fa68729f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars0_png.rf.7b732cb6c2488c131a33ed26e0c953d5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars83_png.rf.ea4d745862c6a2dbd326e8fab72df033.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars134_png.rf.e03d362ad3dffcb2dabda7bdba8e2313.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars163_png.rf.4cd03a71c06eef94fbaca98c99fa998c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars117_png.rf.cbfc5b93c68254e8c463db61129d0a9f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars241_png.rf.8148fb8f153b1d4b6d19fb7dab2b9a20.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars254_png.rf.b450ee3c1d7332d904f00d9b6f6c1ea7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars113_png.rf.4bb772f27fcbaceddc489b2ee1a48dda.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars269_png.rf.83feff5e40276cf355d92120bffd37aa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars64_png.rf.24fb7df58bf7fd800f5db483a836c4f4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars37_png.rf.e39f7b9a1553e41f4782ac5abf1263b7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars100_png.rf.698f8ec69a46f58146c00238bd5e842c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars404_png.rf.d2375acfd4d5208f9359b7bdacb8a7ec.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars102_png.rf.b87bd8032838cdbb344f7f95ebec933f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars263_png.rf.f9e89732a9db461e388846fd669c4498.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars253_png.rf.4dc14192be8c3c5ee09b90a4a0ac11a2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars23_png.rf.bc9edb3e6f64e6154c7dc08b92fd8c88.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars140_png.rf.fdc82dbb250a6066becc1c9242ca2ac4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars430_png.rf.038bfe4cc7d189cc509f92dbd9b80088.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars76_png.rf.547c190c9c2dbe005c815492d75df1fd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars10_png.rf.4910606b6c18877dec46058bc94d3a5a.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars190_png.rf.73eabb4364c8c9b10e813bfe826d768c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars19_png.rf.e657a8eb8c4ed0d4d9a66bb5c049ab7d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars408_png.rf.eedec6a3114ebe42ae0228f7fd70c6cd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars374_png.rf.8a49905013e2acb3ed2ccb2244cbcf04.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars168_png.rf.2a254b51034a68aad40600c42f391b07.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars416_png.rf.df1fec18af3fc99c4313baa3a4e99e21.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars234_png.rf.ee0893945113b268c293758d056026bc.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars75_png.rf.964bae0a48d09f1cd2a3d3ef5d608143.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars1_png.rf.c38e85fd6feeba28d3e3f0d897ed3fa0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars12_png.rf.1a67a71001ed3b7044db2582e3e04957.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars290_png.rf.1dc99a23df27ecdd26b278b6e3a7fad5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars352_png.rf.1db0c309f9dea49ce9c6ce6594d3c811.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars110_png.rf.e8e16ebff990765c8f4a217095166301.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars157_png.rf.d57d445fa261f949cddc249b71c3e616.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars123_png.rf.de1f89c3f494f7f536926aa6753e6f0f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars166_png.rf.a90204071f9cb9cd10f1e0a72f5c66f4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars63_png.rf.1b5174369aba3c7bc22802e752da6fa7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars382_png.rf.c4fde8aea12ac89425e6d3445d480d74.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars141_png.rf.7d3e6f5da10dba13a603fd2aa40ea6a5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars173_png.rf.a2ba2de6b6e46d4c8a824953ddb82675.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars316_png.rf.10302773e9a70c77f7a2641a4f6b6d29.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars196_png.rf.b76dacd9dc443ce9a64713a5b8103c1f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars270_png.rf.210a17a5fe77ec2ca9c2aea47c727df4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars381_png.rf.8d91ab72b065f72a62a05bfb068c2cce.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars183_png.rf.005c6be49001244049aba9b1373416f4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars431_png.rf.f23df4768633eec7f368ec9e56528c58.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars354_png.rf.70c4bd2757f181aacdf46a8b0f638a14.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars265_png.rf.e009f7b38968ffebc01cce79a9728d7c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars231_png.rf.552ee4360a98de7e7d517b39cd95f049.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars258_png.rf.fc475501bdef2783fb9fa55c056c7a5d.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars371_png.rf.a8ef8628f4002122a812442ab75dddb3.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars124_png.rf.13260183a153c22be51a8dc1f4bcc578.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars120_png.rf.daec97a7255a956a9686e8ca38478be2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars181_png.rf.596158f90fe25b254e6c03928c44b6d8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars238_png.rf.649d21a9eb587adba3811ee72469d31a.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars358_png.rf.0f6be47bcf48c22813b1b13b1e6346dd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars306_png.rf.bcb89cfa13ca9dbb7b8e8f0a40583f75.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars184_png.rf.65b3eab420bb410f4c60ba3ace1f4cda.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars41_png.rf.44f11bc48608952a3f2c688d78e54faa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars186_png.rf.c0cd64bb7ccc9422cbf15fdf9c8a7dea.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars129_png.rf.a68004929bf4e4836909e7aefac63af1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars301_png.rf.e5068228a0e6297ba9925f77890a1d74.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars116_png.rf.f1715072b181ba16b0dbf9d8f1fe9141.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars149_png.rf.cfbb11fbe3724d67bfd19b2411e78fec.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars148_png.rf.20e9088a25072dd35e38128cc1b32736.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars252_png.rf.312dfe134e74b4b4362fb7e5fa76d0f1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars278_png.rf.23c1c36ec020e471fd4e4423bdc71f14.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars195_png.rf.902193a20b0a1c82dd0c588454d01cff.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars340_png.rf.5b1b8633e3192f0997697fa044064f06.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars380_png.rf.915053dfa299303b6c67d348dd7d32f1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars175_png.rf.de900c8ed5f932df146c613c85544dc1.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars15_png.rf.d943c2636a3510ed81ecd5c496589eed.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars363_png.rf.a49d3ec19142436c8aec8a79558c967b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars164_png.rf.373e865f41b0bb6a8d49db7ce26825bd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars88_png.rf.6831b8e5174662daa690180bd609047e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars135_png.rf.c9b9ba77cbaefb6592add6a4f4824ef4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars67_png.rf.d1e451aef06d540ae91573635411da0e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars211_png.rf.0288314d96a46bba6bc5b3051c6b9ad8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars105_png.rf.17b769d6c41b747ed37c4188f9ea4587.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars85_png.rf.04a0b2c405f87982bb54d740c7f03a82.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars355_png.rf.09ff7e060930691bb6d1f64431024b41.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars104_png.rf.62adcb6b1dcf67e100c35a759e5c9990.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars220_png.rf.a562540045c9714e17d420348c0f97cc.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars360_png.rf.66569694692e5f7abda07855cd4a3cba.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars219_png.rf.83657436bd3ae4fdf6d7d305f8c85daa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars280_png.rf.8eb3e457939c60e54600593fd1924ad4.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars209_png.rf.923c7406f4f2a8d1923fd064bfb8115c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars90_png.rf.2793e6ee38d9b8eada31e36561b97b8e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars221_png.rf.380b224f2fe222544cd10aa03e5df70e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars345_png.rf.24572b4c905ed646d89111006760877c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars422_png.rf.0ed51126238c833d1ea6e39815bb7a8f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars214_png.rf.98972e474badc32807d2c187f2a6cd3f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars379_png.rf.1aee6b7280351561ce63f7eb8a7644c2.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars243_png.rf.72301c8fbad2029a004a3dd475693b5f.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars396_png.rf.24568d3dd8ff07e6f93768037d59ff62.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars298_png.rf.67761aef6995faa2ccbf2035daaabd46.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars144_png.rf.b1b9cd984087f025f275693761b7bef8.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars162_png.rf.9b7777c4700ec3958e801d7a7c9d483c.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars155_png.rf.80a242f5fcbf88660086906d5e820210.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars152_png.rf.d59e34b1850362809d2b21254cb70be6.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars89_png.rf.baf4f342c3da0793f7baad6b94c6ff95.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars2_png.rf.43f4ab5454faa7edf5120bee8dd503c6.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars233_png.rf.d0a435b0b918da184d9d81025f3f8e52.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars21_png.rf.9444a158ccaf97bb8e3ea1e1ff3777e9.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars126_png.rf.bfd5f9815b4e291424955118ad6e09cd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars291_png.rf.96f1c6ba5d42fd7750c95553e52c55ae.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars294_png.rf.c2780f6a4eb99b31c68f8e11cf823f0e.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars137_png.rf.2cd810e38b68ce3c8558525dd8e75922.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars229_png.rf.2bc9e8df2408364107cca3e1ca0f4546.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars156_png.rf.219a56e1e4f9495b1230b3dcee7be0be.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars391_png.rf.8e1f759520646f494962d996f76a1f43.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars275_png.rf.e11cedece5c9b177d4aa0a62b5c05b13.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars70_png.rf.62767a7ee142b24a283297aa9b165589.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars7_png.rf.6ff7f1b6c4941856a93d5f3da8bd1d59.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars38_png.rf.958c1ec7296cbe68ef8a706b6fa6e078.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars202_png.rf.ba43680d5fb612ed7b275adf0d457213.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars226_png.rf.70ad8cf78060a98621be2f7dff078f78.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars295_png.rf.3e1b90a9fd30f37ae43380d44b1dbbbd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars373_png.rf.f75be9acc7950061eb3a4f3e17dd01fa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars6_png.rf.927e65785f4aac61877d888446b04ba7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars111_png.rf.d435f72caf90a260936de406ac5a7066.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars251_png.rf.3c13c23bce489c0ff9e0f733f7befbdc.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars139_png.rf.8d5493449ac3d5a513d4ba57c387cc50.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars204_png.rf.c7ef33d9799c8bf35aa35e5d5bad3b67.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars194_png.rf.e81882e6b6cbeb2550911d73e470ef90.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars299_png.rf.832dce65dce5912faa8941e10b7e1253.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars350_png.rf.25fc78848043df76ea0d3eff55a37b07.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars307_png.rf.3b49c7ac0a9e0b95a4df04c0c78feabd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars272_png.rf.d0184b631bc3210d141079336153f3ce.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars39_png.rf.fc6fe15c7312e74c2dfc4a4d2e99d6ec.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars71_png.rf.8d16877dc28a48ff32ea07aaa1d00e86.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars409_png.rf.e1e74b651a2343c31c33acba3a629ff7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars329_png.rf.df17afa1658dc4139ae04e12c34f75b6.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars267_png.rf.929dda10471b6cfb6e2ede3a12cdeffd.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars150_png.rf.4a35ab46fa229e214847a0fd93ee8bac.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars337_png.rf.2829977dd4a27f08857552c132e88b89.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars44_png.rf.4f2d7b1f08562400f2de19c73588df5a.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars260_png.rf.665e8dd6c75cda1ef31c9263905187b0.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars323_png.rf.12078981454bbbd706af3958033c7220.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars132_png.rf.4f75c46ca19a81d7795a8a83d7276f22.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars271_png.rf.cb85f3804d8d7830ab48c805eb28f9cf.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars106_png.rf.286d87d553ddba7973ee5904709fcc6b.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars302_png.rf.690a92e28120c814740d6cfc99519d63.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars170_png.rf.916ae9be9ea8a22409f9f72a720ca2c5.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars151_png.rf.36eccafc93728995cc4468bfa3882ad7.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars304_png.rf.1012e65bc2aec05efbb75eb15630a4fa.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars255_png.rf.71bb669d5216cd8057dec245429dd468.jpg\n/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars115_png.rf.9c8bec44c1dd836f251d8ca3d956ba47.jpg\n","output_type":"stream"}]},{"cell_type":"code","source":"import tensorflow as tf\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\nimport torch","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:56:00.775254Z","iopub.execute_input":"2024-08-14T13:56:00.775737Z","iopub.status.idle":"2024-08-14T13:56:06.153961Z","shell.execute_reply.started":"2024-08-14T13:56:00.775706Z","shell.execute_reply":"2024-08-14T13:56:06.152940Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stderr","text":"2024-08-14 13:56:01.114098: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-08-14 13:56:01.114165: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-08-14 13:56:01.115765: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"physical_devices = tf.config.list_physical_devices('GPU')\ntry:\n  tf.config.experimental.set_memory_growth(physical_devices[0], True)\nexcept:\n  pass","metadata":{"execution":{"iopub.status.busy":"2024-08-14T03:45:23.142979Z","iopub.execute_input":"2024-08-14T03:45:23.143997Z","iopub.status.idle":"2024-08-14T03:45:23.187875Z","shell.execute_reply.started":"2024-08-14T03:45:23.143964Z","shell.execute_reply":"2024-08-14T03:45:23.186559Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"physical_devices = tf.config.list_physical_devices('GPU')\nprint(\"Num GPUs Available: \", len(physical_devices))","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:15:40.598409Z","iopub.execute_input":"2024-08-14T10:15:40.598768Z","iopub.status.idle":"2024-08-14T10:15:40.622559Z","shell.execute_reply.started":"2024-08-14T10:15:40.598739Z","shell.execute_reply":"2024-08-14T10:15:40.621532Z"},"trusted":true},"execution_count":30,"outputs":[{"name":"stdout","text":"Num GPUs Available:  1\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## **STEP 1:** Image Preprocessing\na. Resizing\n\nb. Normalization\n\nc. PyTorch tensor","metadata":{}},{"cell_type":"code","source":"from PIL import Image","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:04.622810Z","iopub.execute_input":"2024-08-14T10:06:04.624299Z","iopub.status.idle":"2024-08-14T10:06:04.628621Z","shell.execute_reply.started":"2024-08-14T10:06:04.624253Z","shell.execute_reply":"2024-08-14T10:06:04.627598Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"#Load and resize image.\nwith Image.open(\"/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars0_png.rf.7b732cb6c2488c131a33ed26e0c953d5.jpg\") as img:\n\n    (width, height) = (640, 640)\n    img = img.resize((width, height),Image.Resampling.BILINEAR)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:10.967228Z","iopub.execute_input":"2024-08-14T10:06:10.967605Z","iopub.status.idle":"2024-08-14T10:06:10.991796Z","shell.execute_reply.started":"2024-08-14T10:06:10.967571Z","shell.execute_reply":"2024-08-14T10:06:10.991086Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"img","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:13.255868Z","iopub.execute_input":"2024-08-14T10:06:13.256659Z","iopub.status.idle":"2024-08-14T10:06:13.417721Z","shell.execute_reply.started":"2024-08-14T10:06:13.256622Z","shell.execute_reply":"2024-08-14T10:06:13.416885Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"<PIL.Image.Image image mode=RGB size=640x640>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Normalization\ndef normalize_image(image):\n    image_array = np.array(image) / 255.0\n    return image_array","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:17.328161Z","iopub.execute_input":"2024-08-14T10:06:17.328532Z","iopub.status.idle":"2024-08-14T10:06:17.333397Z","shell.execute_reply.started":"2024-08-14T10:06:17.328501Z","shell.execute_reply":"2024-08-14T10:06:17.332236Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"normalize_image(img)\nimg = np.array(img)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:24.719544Z","iopub.execute_input":"2024-08-14T10:06:24.720358Z","iopub.status.idle":"2024-08-14T10:06:24.731532Z","shell.execute_reply.started":"2024-08-14T10:06:24.720323Z","shell.execute_reply":"2024-08-14T10:06:24.730651Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"def convert_to_tensor(image):\n    image_tensor = torch.from_numpy(image).permute(2, 0, 1).float()\n    return image_tensor.unsqueeze(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:26.258946Z","iopub.execute_input":"2024-08-14T10:06:26.259623Z","iopub.status.idle":"2024-08-14T10:06:26.264083Z","shell.execute_reply.started":"2024-08-14T10:06:26.259591Z","shell.execute_reply":"2024-08-14T10:06:26.263109Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"img = convert_to_tensor(img)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T10:06:32.235403Z","iopub.execute_input":"2024-08-14T10:06:32.236268Z","iopub.status.idle":"2024-08-14T10:06:32.279609Z","shell.execute_reply.started":"2024-08-14T10:06:32.236226Z","shell.execute_reply":"2024-08-14T10:06:32.278847Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"## Setup YOLOv5 and saving the cropped image of the license plate.","metadata":{}},{"cell_type":"code","source":"!git clone https://github.com/ultralytics/yolov5  # clone repo\n!pip install -U -r yolov5/requirements.txt  # install dependencies","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:58:04.588024Z","iopub.execute_input":"2024-08-14T12:58:04.588397Z","iopub.status.idle":"2024-08-14T13:00:57.088086Z","shell.execute_reply.started":"2024-08-14T12:58:04.588365Z","shell.execute_reply":"2024-08-14T13:00:57.086918Z"},"scrolled":true,"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Cloning into 'yolov5'...\nremote: Enumerating objects: 16843, done.\u001b[K\nremote: Counting objects: 100% (18/18), done.\u001b[K\nremote: Compressing objects: 100% (18/18), done.\u001b[K\nremote: Total 16843 (delta 4), reused 10 (delta 0), pack-reused 16825 (from 1)\u001b[K\nReceiving objects: 100% (16843/16843), 15.57 MiB | 33.79 MiB/s, done.\nResolving deltas: 100% (11553/11553), done.\nRequirement already satisfied: gitpython>=3.1.30 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 5)) (3.1.41)\nCollecting gitpython>=3.1.30 (from -r yolov5/requirements.txt (line 5))\n  Downloading GitPython-3.1.43-py3-none-any.whl.metadata (13 kB)\nRequirement already satisfied: matplotlib>=3.3 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 6)) (3.7.5)\nCollecting matplotlib>=3.3 (from -r yolov5/requirements.txt (line 6))\n  Downloading matplotlib-3.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (11 kB)\nRequirement already satisfied: numpy>=1.23.5 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 7)) (1.26.4)\nCollecting numpy>=1.23.5 (from -r yolov5/requirements.txt (line 7))\n  Downloading numpy-2.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.9/60.9 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: opencv-python>=4.1.1 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 8)) (4.10.0.84)\nCollecting pillow>=10.3.0 (from -r yolov5/requirements.txt (line 9))\n  Downloading pillow-10.4.0-cp310-cp310-manylinux_2_28_x86_64.whl.metadata (9.2 kB)\nRequirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 10)) (5.9.3)\nCollecting psutil (from -r yolov5/requirements.txt (line 10))\n  Downloading psutil-6.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (21 kB)\nRequirement already satisfied: PyYAML>=5.3.1 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 11)) (6.0.1)\nCollecting PyYAML>=5.3.1 (from -r yolov5/requirements.txt (line 11))\n  Downloading PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.1 kB)\nRequirement already satisfied: requests>=2.32.0 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 12)) (2.32.3)\nRequirement already satisfied: scipy>=1.4.1 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 13)) (1.11.4)\nCollecting scipy>=1.4.1 (from -r yolov5/requirements.txt (line 13))\n  Downloading scipy-1.14.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (60 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.8/60.8 kB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting thop>=0.1.1 (from -r yolov5/requirements.txt (line 14))\n  Downloading thop-0.1.1.post2209072238-py3-none-any.whl.metadata (2.7 kB)\nRequirement already satisfied: torch>=1.8.0 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 15)) (2.1.2)\nCollecting torch>=1.8.0 (from -r yolov5/requirements.txt (line 15))\n  Downloading torch-2.4.0-cp310-cp310-manylinux1_x86_64.whl.metadata (26 kB)\nRequirement already satisfied: torchvision>=0.9.0 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 16)) (0.16.2)\nCollecting torchvision>=0.9.0 (from -r yolov5/requirements.txt (line 16))\n  Downloading torchvision-0.19.0-cp310-cp310-manylinux1_x86_64.whl.metadata (6.0 kB)\nRequirement already satisfied: tqdm>=4.64.0 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 17)) (4.66.4)\nCollecting tqdm>=4.64.0 (from -r yolov5/requirements.txt (line 17))\n  Downloading tqdm-4.66.5-py3-none-any.whl.metadata (57 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.6/57.6 kB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hCollecting ultralytics>=8.2.34 (from -r yolov5/requirements.txt (line 18))\n  Downloading ultralytics-8.2.77-py3-none-any.whl.metadata (41 kB)\n\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.3/41.3 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hRequirement already satisfied: pandas>=1.1.4 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 27)) (2.2.2)\nRequirement already satisfied: seaborn>=0.11.0 in /opt/conda/lib/python3.10/site-packages (from -r yolov5/requirements.txt (line 28)) (0.12.2)\nCollecting seaborn>=0.11.0 (from -r yolov5/requirements.txt (line 28))\n  Downloading seaborn-0.13.2-py3-none-any.whl.metadata (5.4 kB)\nCollecting setuptools>=70.0.0 (from -r yolov5/requirements.txt (line 42))\n  Downloading setuptools-72.2.0-py3-none-any.whl.metadata (6.6 kB)\nRequirement already satisfied: gitdb<5,>=4.0.1 in /opt/conda/lib/python3.10/site-packages (from gitpython>=3.1.30->-r yolov5/requirements.txt (line 5)) (4.0.11)\nRequirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (1.2.0)\nRequirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (4.47.0)\nRequirement already satisfied: kiwisolver>=1.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (1.4.5)\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (21.3)\nRequirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (3.1.1)\nRequirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (2.9.0.post0)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.32.0->-r yolov5/requirements.txt (line 12)) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.32.0->-r yolov5/requirements.txt (line 12)) (3.6)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.32.0->-r yolov5/requirements.txt (line 12)) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.32.0->-r yolov5/requirements.txt (line 12)) (2024.7.4)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (3.13.1)\nRequirement already satisfied: typing-extensions>=4.8.0 in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (4.9.0)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (1.13.0)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (3.2.1)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (3.1.2)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (2024.5.0)\nCollecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-runtime-cu12==12.1.105 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cuda-cupti-cu12==12.1.105 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cublas-cu12==12.1.3.1 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cufft-cu12==11.0.2.54 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-curand-cu12==10.3.2.106 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl.metadata (1.5 kB)\nCollecting nvidia-cusolver-cu12==11.4.5.107 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-cusparse-cu12==12.1.0.106 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl.metadata (1.6 kB)\nCollecting nvidia-nccl-cu12==2.20.5 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl.metadata (1.8 kB)\nCollecting nvidia-nvtx-cu12==12.1.105 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl.metadata (1.7 kB)\nCollecting triton==3.0.0 (from torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading triton-3.0.0-1-cp310-cp310-manylinux2014_x86_64.manylinux_2_17_x86_64.whl.metadata (1.3 kB)\nCollecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch>=1.8.0->-r yolov5/requirements.txt (line 15))\n  Downloading nvidia_nvjitlink_cu12-12.6.20-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\nRequirement already satisfied: py-cpuinfo in /opt/conda/lib/python3.10/site-packages (from ultralytics>=8.2.34->-r yolov5/requirements.txt (line 18)) (9.0.0)\nCollecting ultralytics-thop>=2.0.0 (from ultralytics>=8.2.34->-r yolov5/requirements.txt (line 18))\n  Downloading ultralytics_thop-2.0.0-py3-none-any.whl.metadata (8.5 kB)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->-r yolov5/requirements.txt (line 27)) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>=1.1.4->-r yolov5/requirements.txt (line 27)) (2023.4)\nRequirement already satisfied: smmap<6,>=3.0.1 in /opt/conda/lib/python3.10/site-packages (from gitdb<5,>=4.0.1->gitpython>=3.1.30->-r yolov5/requirements.txt (line 5)) (5.0.1)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib>=3.3->-r yolov5/requirements.txt (line 6)) (1.16.0)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (2.1.3)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.8.0->-r yolov5/requirements.txt (line 15)) (1.3.0)\nDownloading GitPython-3.1.43-py3-none-any.whl (207 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.3/207.3 kB\u001b[0m \u001b[31m9.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading matplotlib-3.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (8.3 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.3/8.3 MB\u001b[0m \u001b[31m87.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading pillow-10.4.0-cp310-cp310-manylinux_2_28_x86_64.whl (4.5 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.5/4.5 MB\u001b[0m \u001b[31m76.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[?25hDownloading psutil-6.0.0-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (290 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m290.5/290.5 kB\u001b[0m \u001b[31m17.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (751 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m751.2/751.2 kB\u001b[0m \u001b[31m36.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading scipy-1.14.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.1 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m41.1/41.1 MB\u001b[0m \u001b[31m41.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading thop-0.1.1.post2209072238-py3-none-any.whl (15 kB)\nDownloading torch-2.4.0-cp310-cp310-manylinux1_x86_64.whl (797.2 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m797.2/797.2 MB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m410.6/410.6 MB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m14.1/14.1 MB\u001b[0m \u001b[31m84.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m23.7/23.7 MB\u001b[0m \u001b[31m72.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m823.6/823.6 kB\u001b[0m \u001b[31m40.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m121.6/121.6 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.5/56.5 MB\u001b[0m \u001b[31m10.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m124.2/124.2 MB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m196.0/196.0 MB\u001b[0m \u001b[31m8.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m176.2/176.2 MB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m99.1/99.1 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading triton-3.0.0-1-cp310-cp310-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (209.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m209.4/209.4 MB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading torchvision-0.19.0-cp310-cp310-manylinux1_x86_64.whl (7.0 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.0/7.0 MB\u001b[0m \u001b[31m82.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading tqdm-4.66.5-py3-none-any.whl (78 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m78.4/78.4 kB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading ultralytics-8.2.77-py3-none-any.whl (869 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m869.0/869.0 kB\u001b[0m \u001b[31m38.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading seaborn-0.13.2-py3-none-any.whl (294 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m294.9/294.9 kB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25hDownloading setuptools-72.2.0-py3-none-any.whl (2.3 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.3/2.3 MB\u001b[0m \u001b[31m57.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[?25hDownloading ultralytics_thop-2.0.0-py3-none-any.whl (25 kB)\nDownloading nvidia_nvjitlink_cu12-12.6.20-py3-none-manylinux2014_x86_64.whl (19.7 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m19.7/19.7 MB\u001b[0m \u001b[31m71.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: triton, tqdm, setuptools, scipy, PyYAML, psutil, pillow, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, matplotlib, gitpython, seaborn, nvidia-cusolver-cu12, torch, ultralytics-thop, torchvision, thop, ultralytics\n  Attempting uninstall: tqdm\n    Found existing installation: tqdm 4.66.4\n    Uninstalling tqdm-4.66.4:\n      Successfully uninstalled tqdm-4.66.4\n  Attempting uninstall: setuptools\n    Found existing installation: setuptools 69.0.3\n    Uninstalling setuptools-69.0.3:\n      Successfully uninstalled setuptools-69.0.3\n  Attempting uninstall: scipy\n    Found existing installation: scipy 1.11.4\n    Uninstalling scipy-1.11.4:\n      Successfully uninstalled scipy-1.11.4\n  Attempting uninstall: PyYAML\n    Found existing installation: PyYAML 6.0.1\n    Uninstalling PyYAML-6.0.1:\n      Successfully uninstalled PyYAML-6.0.1\n  Attempting uninstall: psutil\n    Found existing installation: psutil 5.9.3\n    Uninstalling psutil-5.9.3:\n      Successfully uninstalled psutil-5.9.3\n  Attempting uninstall: pillow\n    Found existing installation: Pillow 9.5.0\n    Uninstalling Pillow-9.5.0:\n      Successfully uninstalled Pillow-9.5.0\n  Attempting uninstall: matplotlib\n    Found existing installation: matplotlib 3.7.5\n    Uninstalling matplotlib-3.7.5:\n      Successfully uninstalled matplotlib-3.7.5\n  Attempting uninstall: gitpython\n    Found existing installation: GitPython 3.1.41\n    Uninstalling GitPython-3.1.41:\n      Successfully uninstalled GitPython-3.1.41\n  Attempting uninstall: seaborn\n    Found existing installation: seaborn 0.12.2\n    Uninstalling seaborn-0.12.2:\n      Successfully uninstalled seaborn-0.12.2\n  Attempting uninstall: torch\n    Found existing installation: torch 2.1.2\n    Uninstalling torch-2.1.2:\n      Successfully uninstalled torch-2.1.2\n^C\n\u001b[31mERROR: Operation cancelled by user\u001b[0m\u001b[31m\n\u001b[0m","output_type":"stream"}]},{"cell_type":"code","source":"import torch","metadata":{"execution":{"iopub.status.busy":"2024-08-14T14:00:23.438973Z","iopub.execute_input":"2024-08-14T14:00:23.439396Z","iopub.status.idle":"2024-08-14T14:00:23.445760Z","shell.execute_reply.started":"2024-08-14T14:00:23.439364Z","shell.execute_reply":"2024-08-14T14:00:23.444842Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"from IPython.display import Image  # for displaying images","metadata":{"execution":{"iopub.status.busy":"2024-08-14T14:00:24.505719Z","iopub.execute_input":"2024-08-14T14:00:24.506447Z","iopub.status.idle":"2024-08-14T14:00:24.510700Z","shell.execute_reply.started":"2024-08-14T14:00:24.506412Z","shell.execute_reply":"2024-08-14T14:00:24.509794Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"print('torch %s %s' % (torch.__version__, torch.cuda.get_device_properties(0) if torch.cuda.is_available() else 'CPU'))","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:01:38.694542Z","iopub.execute_input":"2024-08-14T13:01:38.694893Z","iopub.status.idle":"2024-08-14T13:01:38.775832Z","shell.execute_reply.started":"2024-08-14T13:01:38.694866Z","shell.execute_reply":"2024-08-14T13:01:38.774929Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"torch 2.4.0+cu121 _CudaDeviceProperties(name='Tesla P100-PCIE-16GB', major=6, minor=0, total_memory=16269MB, multi_processor_count=56)\n","output_type":"stream"}]},{"cell_type":"code","source":"#download pretrained weights\n!wget https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s.pt","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:23:05.754120Z","iopub.execute_input":"2024-08-14T13:23:05.754906Z","iopub.status.idle":"2024-08-14T13:23:07.351322Z","shell.execute_reply.started":"2024-08-14T13:23:05.754868Z","shell.execute_reply":"2024-08-14T13:23:07.350231Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stdout","text":"--2024-08-14 13:23:06--  https://github.com/ultralytics/yolov5/releases/download/v7.0/yolov5s.pt\nResolving github.com (github.com)... 140.82.116.4\nConnecting to github.com (github.com)|140.82.116.4|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://objects.githubusercontent.com/github-production-release-asset-2e65be/264818686/381bd8a8-8910-4e9e-b0dd-2752951ef78c?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240814%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240814T132306Z&X-Amz-Expires=300&X-Amz-Signature=b79b2157177cf7578462568e64cdf1db7e38ba2e6382dc600cbd91717030f5f1&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=264818686&response-content-disposition=attachment%3B%20filename%3Dyolov5s.pt&response-content-type=application%2Foctet-stream [following]\n--2024-08-14 13:23:06--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/264818686/381bd8a8-8910-4e9e-b0dd-2752951ef78c?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=releaseassetproduction%2F20240814%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240814T132306Z&X-Amz-Expires=300&X-Amz-Signature=b79b2157177cf7578462568e64cdf1db7e38ba2e6382dc600cbd91717030f5f1&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=264818686&response-content-disposition=attachment%3B%20filename%3Dyolov5s.pt&response-content-type=application%2Foctet-stream\nResolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.108.133, ...\nConnecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.109.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 14808437 (14M) [application/octet-stream]\nSaving to: 'yolov5s.pt'\n\nyolov5s.pt          100%[===================>]  14.12M  --.-KB/s    in 0.08s   \n\n2024-08-14 13:23:07 (167 MB/s) - 'yolov5s.pt' saved [14808437/14808437]\n\n","output_type":"stream"}]},{"cell_type":"code","source":"!python yolov5/train.py --img-size 640 --batch-size 16 --epochs 100 --data /kaggle/input/alpdr-dataset/ALPDR_data/data.yaml --weights /kaggle/working/yolov5s.pt --name train_results --nosave --cache","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-08-14T14:13:32.762943Z","iopub.execute_input":"2024-08-14T14:13:32.763375Z","iopub.status.idle":"2024-08-14T14:20:27.561945Z","shell.execute_reply.started":"2024-08-14T14:13:32.763339Z","shell.execute_reply":"2024-08-14T14:20:27.560711Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"\u001b[34m\u001b[1mwandb\u001b[0m: WARNING ⚠️ wandb is deprecated and will be removed in a future release. See supported integrations at https://github.com/ultralytics/yolov5#integrations.\n2024-08-14 14:13:40.380872: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-08-14 14:13:40.380935: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-08-14 14:13:40.382519: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n\u001b[34m\u001b[1mwandb\u001b[0m: (1) Create a W&B account\n\u001b[34m\u001b[1mwandb\u001b[0m: (2) Use an existing W&B account\n\u001b[34m\u001b[1mwandb\u001b[0m: (3) Don't visualize my results\n\u001b[34m\u001b[1mwandb\u001b[0m: Enter your choice: (30 second timeout) \n\u001b[34m\u001b[1mwandb\u001b[0m: W&B disabled due to login timeout.\n\u001b[34m\u001b[1mtrain: \u001b[0mweights=/kaggle/working/yolov5s.pt, cfg=, data=/kaggle/input/alpdr-dataset/ALPDR_data/data.yaml, hyp=yolov5/data/hyps/hyp.scratch-low.yaml, epochs=100, batch_size=16, imgsz=640, rect=False, resume=False, nosave=True, noval=False, noautoanchor=False, noplots=False, evolve=None, evolve_population=yolov5/data/hyps, resume_evolve=None, bucket=, cache=ram, image_weights=False, device=, multi_scale=False, single_cls=False, optimizer=SGD, sync_bn=False, workers=8, project=yolov5/runs/train, name=train_results, exist_ok=False, quad=False, cos_lr=False, label_smoothing=0.0, patience=100, freeze=[0], save_period=-1, seed=0, local_rank=-1, entity=None, upload_dataset=False, bbox_interval=-1, artifact_alias=latest, ndjson_console=False, ndjson_file=False\n\u001b[34m\u001b[1mgithub: \u001b[0mup to date with https://github.com/ultralytics/yolov5 ✅\nYOLOv5 🚀 v7.0-351-g19ce9029 Python-3.10.13 torch-2.4.0+cu121 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\n\n\u001b[34m\u001b[1mhyperparameters: \u001b[0mlr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.5, cls_pw=1.0, obj=1.0, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0\n\u001b[34m\u001b[1mComet: \u001b[0mrun 'pip install comet_ml' to automatically track and visualize YOLOv5 🚀 runs in Comet\n\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir yolov5/runs/train', view at http://localhost:6006/\nOverriding model.yaml nc=80 with nc=1\n\n                 from  n    params  module                                  arguments                     \n  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]              \n  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]                \n  2                -1  1     18816  models.common.C3                        [64, 64, 1]                   \n  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]               \n  4                -1  2    115712  models.common.C3                        [128, 128, 2]                 \n  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]              \n  6                -1  3    625152  models.common.C3                        [256, 256, 3]                 \n  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]              \n  8                -1  1   1182720  models.common.C3                        [512, 512, 1]                 \n  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]                 \n 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]              \n 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n 12           [-1, 6]  1         0  models.common.Concat                    [1]                           \n 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]          \n 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]              \n 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n 16           [-1, 4]  1         0  models.common.Concat                    [1]                           \n 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]          \n 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]              \n 19          [-1, 14]  1         0  models.common.Concat                    [1]                           \n 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]          \n 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]              \n 22          [-1, 10]  1         0  models.common.Concat                    [1]                           \n 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]          \n 24      [17, 20, 23]  1     16182  models.yolo.Detect                      [1, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]\nModel summary: 214 layers, 7022326 parameters, 7022326 gradients, 15.9 GFLOPs\n\nTransferred 343/349 items from /kaggle/working/yolov5s.pt\n/kaggle/working/yolov5/models/common.py:869: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with amp.autocast(autocast):\n/kaggle/working/yolov5/models/common.py:869: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with amp.autocast(autocast):\n\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n\u001b[34m\u001b[1moptimizer:\u001b[0m SGD(lr=0.01) with parameter groups 57 weight(decay=0.0), 60 weight(decay=0.0005), 60 bias\n\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n/opt/conda/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  self.pid = os.fork()\n\u001b[34m\u001b[1mtrain: \u001b[0mScanning /kaggle/input/alpdr-dataset/ALPDR_data/train/labels... 208 image\u001b[0m\n\u001b[34m\u001b[1mtrain: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/alpdr-dataset/ALPDR_data/train is not writeable: [Errno 30] Read-only file system: '/kaggle/input/alpdr-dataset/ALPDR_data/train/labels.cache.npy'\n\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.2GB ram): 100%|██████████| 208/208 [00:00<00:00, 678.89\u001b[0m\n\u001b[34m\u001b[1mval: \u001b[0mScanning /kaggle/input/alpdr-dataset/ALPDR_data/valid/labels... 59 images, \u001b[0m\n\u001b[34m\u001b[1mval: \u001b[0mWARNING ⚠️ Cache directory /kaggle/input/alpdr-dataset/ALPDR_data/valid is not writeable: [Errno 30] Read-only file system: '/kaggle/input/alpdr-dataset/ALPDR_data/valid/labels.cache.npy'\n\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.1GB ram): 100%|██████████| 59/59 [00:00<00:00, 303.96it/s\u001b[0m\n\n\u001b[34m\u001b[1mAutoAnchor: \u001b[0m4.54 anchors/target, 0.993 Best Possible Recall (BPR). Current anchors are a good fit to dataset ✅\nPlotting labels to yolov5/runs/train/train_results5/labels.jpg... \n/kaggle/working/yolov5/train.py:355: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.\n  scaler = torch.cuda.amp.GradScaler(enabled=amp)\nImage sizes 640 train, 640 val\nUsing 4 dataloader workers\nLogging results to \u001b[1myolov5/runs/train/train_results5\u001b[0m\nStarting training for 100 epochs...\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.86G     0.1227    0.03155          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1245    0.03129          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1242    0.03171          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1237    0.03114          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1225    0.03133          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1221    0.03099          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1214    0.03084          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1212    0.03061          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1206    0.03061          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1197    0.03039          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G      0.119    0.03013          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1181    0.02973          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       0/99      3.91G     0.1172    0.02935          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89    0.00096      0.191    0.00066   0.000113\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1093    0.02776          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1097    0.02788          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1088    0.02646          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1092    0.02637          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1085    0.02571          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1088    0.02608          0         49        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G      0.108    0.02593          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G      0.108    0.02558          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1075    0.02559          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1064    0.02534          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1054    0.02524          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1052    0.02521          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       1/99      3.91G     0.1044    0.02502          0         29        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89     0.0013      0.258     0.0012   0.000307\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G     0.1057    0.02089          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G     0.1048    0.02176          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G     0.1029    0.02145          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G     0.1013    0.02117          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09931    0.02164          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09881    0.02136          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09915    0.02123          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G      0.099    0.02124          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09736    0.02116          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09648    0.02124          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09558    0.02138          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09495    0.02124          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       2/99      3.91G    0.09457    0.02127          0         34        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89    0.00215      0.427    0.00417   0.000985\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.09171    0.01977          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08931    0.02188          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08813    0.02195          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08853    0.02248          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08939    0.02297          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08952    0.02314          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08987    0.02313          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08923    0.02307          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08816    0.02253          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08722    0.02216          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08683    0.02184          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G     0.0869    0.02184          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       3/99      3.91G    0.08613     0.0221          0         35        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89    0.00277      0.551     0.0305    0.00722\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.08566    0.02072          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.08461     0.0189          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.08135    0.01966          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07809    0.01971          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07816    0.02007          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07816    0.02109          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07823    0.02094          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07761    0.02035          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07811    0.01976          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07912     0.0198          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G     0.0797    0.01984          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G    0.07933    0.01958          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       4/99      3.91G     0.0795    0.01975          0         37        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89     0.0666      0.393     0.0873     0.0236\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07705    0.02052          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07293    0.01926          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07211    0.01933          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07246    0.01931          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07545    0.02021          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07516    0.01878          0         15        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07602    0.01846          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07644    0.01848          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07688    0.01864          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07685    0.01887          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07635    0.01878          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07647    0.01886          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       5/99      3.91G    0.07614    0.01897          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.421      0.188      0.176     0.0491\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07225     0.0222          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.06789    0.02016          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07129    0.02006          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07176    0.01991          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07128     0.0205          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07206    0.02047          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G      0.071     0.0201          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07023    0.02031          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.07036    0.02085          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.06993    0.02061          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.06918    0.02028          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.06929    0.02054          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       6/99      3.91G    0.06869    0.02042          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.249      0.135      0.119      0.033\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07588    0.01762          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07082    0.01885          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07236    0.01866          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G     0.0697    0.01814          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.06943    0.01853          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07011     0.0182          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07032    0.01865          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07028    0.01848          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.06979    0.01873          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07027    0.01844          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07069    0.01852          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G     0.0707    0.01822          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       7/99      3.91G    0.07089    0.01811          0         27        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.325      0.146      0.178     0.0426\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06712    0.01636          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06737    0.01606          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06706    0.01859          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06626    0.01841          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06653    0.01806          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G     0.0668    0.01831          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06633    0.01869          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06652    0.01926          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06623    0.01953          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06508    0.01965          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06528    0.01966          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G     0.0644    0.01959          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       8/99      3.91G    0.06483    0.01931          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.349      0.124      0.144      0.037\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06575     0.0182          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06734    0.01942          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.07065    0.01758          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06875     0.0185          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06703    0.01871          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06646    0.01829          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06497     0.0184          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06408    0.01871          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06376    0.01865          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06333    0.01896          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06304    0.01903          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G    0.06328    0.01899          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n       9/99      3.91G     0.0634    0.01918          0         36        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.31      0.258      0.166     0.0468\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06159    0.01966          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06206    0.01778          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.05991    0.02037          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06193    0.02078          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06131    0.02135          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06266    0.02191          0         48        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06258    0.02152          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06236    0.02197          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06201    0.02199          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06211    0.02181          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06185    0.02141          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06091    0.02092          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      10/99      3.91G    0.06087    0.02079          0         40        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.322      0.326       0.23     0.0681\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05515    0.01397          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05552     0.0148          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05455     0.0149          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05503    0.01536          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05422    0.01579          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05612    0.01617          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05714    0.01565          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05779    0.01524          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05841    0.01559          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05829      0.016          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05843    0.01613          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05789    0.01638          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      11/99      3.91G    0.05731    0.01666          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.353      0.325      0.273      0.109\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G     0.0588    0.01775          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05991    0.01768          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05919    0.01659          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.06006    0.01674          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05951    0.01712          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G     0.0582    0.01704          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05738    0.01678          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05655    0.01741          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G     0.0571    0.01749          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05774    0.01812          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05801    0.01782          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05822    0.01776          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      12/99      3.91G    0.05759    0.01796          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.438      0.404      0.356      0.111\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.04868    0.01974          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05076    0.02258          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G     0.0564    0.02121          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G     0.0554    0.02153          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G     0.0538     0.0208          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05304    0.01996          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05378    0.01919          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05405    0.01867          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05466    0.01848          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05422    0.01821          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05406    0.01804          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05419    0.01817          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      13/99      3.91G    0.05418    0.01821          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.287      0.404      0.287      0.133\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05934    0.01293          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05537    0.01481          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05439    0.01616          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05416    0.01865          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05372    0.01833          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05331    0.01752          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05343    0.01721          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05322    0.01808          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05339    0.01775          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05325    0.01759          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05294     0.0176          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05253    0.01766          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      14/99      3.91G    0.05193    0.01724          0         21        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.408      0.382      0.366      0.145\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04896    0.01466          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04995    0.01613          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04917     0.0151          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04633    0.01379          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04635    0.01325          0         18        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04766    0.01316          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G     0.0483    0.01314          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04996    0.01381          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04981    0.01449          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04915    0.01471          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G     0.0494    0.01467          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04933    0.01471          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      15/99      3.91G    0.04874    0.01445          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.406      0.438      0.337      0.128\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04748    0.01685          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04813    0.01517          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04664    0.01583          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04659    0.01583          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04762    0.01578          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04825    0.01534          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04897    0.01534          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04914    0.01548          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04947    0.01551          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04938    0.01585          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04931     0.0155          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G    0.04905    0.01538          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      16/99      3.91G     0.0485     0.0156          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.518      0.506      0.442      0.185\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04637    0.01404          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04436    0.01353          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G     0.0451    0.01542          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04541    0.01462          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04593     0.0145          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04661    0.01419          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04693    0.01393          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04668    0.01486          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04681    0.01492          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G     0.0469    0.01509          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04696    0.01535          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04697    0.01542          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      17/99      3.91G    0.04674    0.01536          0         29        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.465      0.506      0.432      0.146\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G     0.0461    0.01366          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G     0.0477      0.015          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04563    0.01467          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04567    0.01454          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04392    0.01409          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G     0.0435    0.01397          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04329    0.01401          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04447    0.01415          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04515    0.01419          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04541    0.01388          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04562      0.014          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04517    0.01377          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      18/99      3.91G    0.04509    0.01351          0         23        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.579      0.584       0.54      0.239\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.03946    0.01097          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04378    0.01214          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04292    0.01245          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04326    0.01261          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G     0.0437    0.01283          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04397    0.01305          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G     0.0439    0.01292          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04384    0.01298          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04405    0.01324          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04456    0.01347          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04526    0.01356          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04518    0.01385          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      19/99      3.91G    0.04508    0.01386          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.479      0.483      0.402      0.164\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G     0.0513    0.01793          0         48        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.05007    0.01409          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04804     0.0128          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04843    0.01243          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04793    0.01284          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04685    0.01217          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04648     0.0126          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04656    0.01255          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04633    0.01259          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04597    0.01274          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04583    0.01265          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04577    0.01285          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      20/99      3.91G    0.04549    0.01278          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.676       0.54      0.558      0.258\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04077    0.01133          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04228    0.01156          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04256    0.01173          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04322    0.01125          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04334    0.01163          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04342    0.01239          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04392    0.01278          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04426    0.01269          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04453    0.01241          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04507    0.01213          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04479    0.01174          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04446    0.01169          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      21/99      3.91G    0.04416    0.01183          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.651      0.528       0.52      0.188\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04105    0.01029          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04064    0.01097          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.03988    0.01096          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.03854    0.01038          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.03885    0.01146          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.03867      0.011          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.03968    0.01123          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04041    0.01157          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04081    0.01165          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04197    0.01181          0         59        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04186    0.01156          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04137    0.01175          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      22/99      3.91G    0.04133    0.01163          0         30        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.684      0.551      0.551      0.266\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.03837    0.01142          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.03808    0.01356          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04023    0.01224          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04101    0.01271          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04137      0.013          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04275    0.01229          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04399    0.01189          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04386    0.01194          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04489    0.01163          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04481    0.01155          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04418    0.01152          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04434    0.01132          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      23/99      3.91G    0.04475    0.01155          0         40        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.643      0.506      0.494       0.17\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04265    0.01346          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04081     0.0123          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G     0.0439      0.012          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04351    0.01176          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04234    0.01141          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04179    0.01215          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04124     0.0119          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04187     0.0125          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04227    0.01256          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04206    0.01261          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04222     0.0121          0         15        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04238    0.01189          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      24/99      3.91G    0.04249    0.01164          0         24        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.667      0.663       0.59      0.269\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04176    0.01196          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04569    0.01094          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04691    0.01115          0         49        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04548    0.01076          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04439    0.01059          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04292    0.01061          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04269     0.0108          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04255     0.0111          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04238    0.01088          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04222    0.01127          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04211    0.01137          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04234    0.01147          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      25/99      3.91G    0.04264    0.01134          0         39        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.596      0.584      0.523      0.186\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04906    0.00696          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04424   0.007663          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04229   0.008961          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04208    0.01036          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04284    0.01031          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04175   0.009799          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04269    0.01003          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G     0.0425    0.01011          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04182    0.01029          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04176    0.01004          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04203    0.01019          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04178    0.01015          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      26/99      3.91G    0.04212    0.01005          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.649      0.742      0.643      0.297\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04266    0.01199          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04169    0.01393          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G     0.0403    0.01318          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G     0.0403    0.01169          0         16        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.03977    0.01154          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04157    0.01191          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04226     0.0128          0         54        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04235    0.01286          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04192    0.01239          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04121    0.01221          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04068    0.01223          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.04011    0.01178          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      27/99      3.91G    0.03998    0.01182          0         42        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.599      0.674      0.576      0.256\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04084   0.009843          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04001    0.01029          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04023   0.009997          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G     0.0397    0.01005          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04091    0.01049          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04143   0.009921          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04118   0.009896          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04119   0.009625          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04133   0.009092          0         17        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04148   0.009078          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04133   0.009517          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04137   0.009608          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      28/99      3.91G    0.04122   0.009692          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.713      0.663      0.679      0.348\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.04196    0.01064          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.04125    0.01281          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03856    0.01213          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03832    0.01118          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03848    0.01186          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03807    0.01228          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03824     0.0119          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03905    0.01229          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03894    0.01215          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G      0.039    0.01229          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03923    0.01197          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03972    0.01212          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      29/99      3.91G    0.03972    0.01205          0         29        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.771      0.528      0.603      0.274\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03948   0.006769          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G     0.0418   0.008906          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03898   0.009569          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G     0.0373   0.009439          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03713    0.01097          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03683    0.01075          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03769    0.01067          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G      0.038    0.01048          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03782    0.01039          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G     0.0377    0.01034          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03803    0.01039          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03865    0.01058          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      30/99      3.91G    0.03881    0.01045          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.743      0.683      0.677      0.326\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03541   0.006834          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G     0.0389   0.007834          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G      0.037   0.007743          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03819   0.008046          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03885   0.009613          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03874   0.009518          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03977   0.009303          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03955   0.009504          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03967   0.009499          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03971    0.00953          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03925   0.009419          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G     0.0394   0.009443          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      31/99      3.91G    0.03884   0.009437          0         30        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.683      0.562      0.593       0.23\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03811    0.01181          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.04171   0.009922          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.04067    0.01015          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G     0.0409    0.01003          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03964    0.01025          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03919     0.0107          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03902    0.01013          0         18        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03824    0.01032          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03809    0.01027          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03799       0.01          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03796    0.01005          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03778    0.01008          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      32/99      3.91G    0.03768   0.009817          0         23        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.793      0.596      0.667      0.322\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03989   0.008062          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03787     0.0092          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03684   0.009051          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03835   0.009042          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03661   0.008792          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03618   0.009572          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03572   0.009393          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03553   0.009195          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03544   0.009391          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03527   0.009284          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03494   0.009088          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03547   0.009285          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      33/99      3.91G    0.03541   0.009326          0         30        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.755      0.629      0.674      0.281\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03756   0.007124          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03789   0.009178          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03567   0.008706          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03518   0.008665          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03463   0.008838          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03482   0.009057          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03477    0.00875          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G     0.0348   0.008832          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03483   0.008862          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03504   0.009359          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03514   0.009282          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03542   0.009585          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      34/99      3.91G    0.03551   0.009485          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.696      0.719      0.693      0.349\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03948   0.007768          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03921    0.01129          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03502    0.01027          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03555    0.01069          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03492    0.01011          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03607    0.01081          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03673    0.01056          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03709    0.01012          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03729    0.01038          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03754    0.01041          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03764    0.01033          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03748    0.01019          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      35/99      3.91G    0.03705    0.01003          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.688      0.695      0.677      0.311\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03684   0.008687          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03847   0.009745          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03684    0.00984          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03527   0.009609          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03527   0.009357          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03617   0.009469          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03526   0.009151          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03478   0.009028          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03499    0.00935          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03544   0.009644          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G    0.03547   0.009634          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G     0.0353   0.009407          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      36/99      3.91G     0.0353   0.009285          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.719      0.674      0.657      0.346\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03117   0.007114          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03473   0.007848          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03455   0.008658          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03404   0.008783          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03442   0.009157          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03408    0.00955          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03412   0.009272          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03453   0.009428          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03451   0.009488          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G     0.0344   0.009187          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03432   0.009143          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03401   0.009042          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      37/99      3.91G    0.03415   0.008965          0         21        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.775      0.674      0.662      0.307\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.04386    0.01022          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03798   0.009171          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03704   0.008837          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03444   0.009031          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03447   0.009186          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03424   0.008933          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03494   0.009236          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03526   0.009434          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03592   0.009397          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03623   0.009434          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03615   0.009745          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G     0.0361   0.009761          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      38/99      3.91G    0.03608    0.01012          0         37        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.735      0.674      0.656       0.32\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.02807   0.008776          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03009    0.01023          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03038    0.01059          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03036    0.01006          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03111   0.009502          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03201   0.009117          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03378   0.009434          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03363   0.009153          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G     0.0344   0.009625          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03383   0.009684          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03359   0.009839          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03391   0.009712          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      39/99      3.91G    0.03364   0.009574          0         29        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.808       0.64      0.657      0.331\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03474    0.01096          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03471    0.01039          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03551    0.01044          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03508    0.01006          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03412   0.009666          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03469   0.009677          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03478    0.01007          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03409   0.009999          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03378   0.009806          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03348   0.009692          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G     0.0335   0.009798          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03339    0.00957          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      40/99      3.91G    0.03311    0.00938          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.799      0.624      0.656      0.325\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03195   0.008582          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03365    0.01031          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G     0.0344    0.01049          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03295   0.009641          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03296   0.009522          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03279   0.008999          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03246   0.008778          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03262   0.008647          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03254   0.008535          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03266   0.008376          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03323   0.008405          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03275   0.008457          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      41/99      3.91G    0.03241   0.008627          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.82      0.616      0.662      0.338\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03005   0.007372          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03042   0.009041          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03024   0.008709          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.02997   0.008696          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03094   0.009261          0         51        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03129   0.009544          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03143   0.009045          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03199   0.009067          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03231   0.009069          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03256    0.00903          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03283   0.009161          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03308   0.009149          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      42/99      3.91G    0.03299   0.008983          0         27        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.817      0.703      0.694       0.36\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03758   0.009901          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03298   0.009023          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03116   0.008288          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03059   0.008388          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03033   0.008919          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03147   0.008928          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03208   0.008823          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03239   0.008603          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03254   0.008849          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03253   0.008699          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03233   0.008777          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03236   0.008768          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      43/99      3.91G    0.03258   0.008856          0         36        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.827      0.674      0.702       0.33\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03069   0.008264          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03305   0.008525          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03448    0.00816          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03342   0.008669          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03339    0.00903          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03243   0.008951          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03246   0.008849          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03207   0.008622          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03136   0.008621          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03092   0.008472          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03099    0.00883          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G     0.0309   0.008615          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      44/99      3.91G    0.03075   0.008403          0         20        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.781       0.73      0.705      0.381\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02824   0.008096          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02995     0.0078          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03002     0.0074          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02966    0.00763          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02946   0.007335          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02993   0.008306          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03004   0.008452          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.02987   0.008619          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03059   0.008816          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03062   0.008734          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03069   0.008921          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03078   0.009232          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      45/99      3.91G    0.03107   0.009069          0         31        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.782      0.719      0.711      0.351\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03888   0.006488          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03935   0.008199          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03698   0.009599          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03517   0.008887          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03378   0.009019          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03356   0.009129          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03444   0.009052          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03397   0.008998          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03348    0.00879          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03349   0.008989          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03292   0.008709          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03261    0.00884          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      46/99      3.91G    0.03232   0.008728          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.786      0.742      0.726      0.384\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03212   0.009981          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02981   0.009358          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02865   0.008868          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02867   0.008069          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02906   0.008038          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02921   0.008093          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.02931   0.007774          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G     0.0299   0.007621          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03034   0.007609          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03037   0.007798          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03036   0.008118          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03047   0.008153          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      47/99      3.91G    0.03041   0.008245          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.805       0.73      0.713      0.393\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03052   0.006997          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03464   0.006702          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03463   0.008417          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G     0.0336   0.008879          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03219   0.008466          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03099   0.007874          0         17        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03147   0.008111          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03176   0.008091          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03133   0.008095          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G     0.0309   0.008396          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G     0.0313   0.008497          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03138   0.008432          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      48/99      3.91G    0.03174   0.008339          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.801       0.73      0.721      0.371\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02859   0.007432          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02793   0.007007          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02865   0.008042          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02834   0.007484          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02858   0.007958          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.02951   0.008608          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03008   0.008857          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03079   0.009032          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03112   0.009082          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03088   0.008859          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03082   0.008824          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03095   0.008995          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      49/99      3.91G    0.03087   0.008793          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.778       0.73      0.719      0.375\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02415   0.006724          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G     0.0265   0.009044          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02844   0.009162          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02843   0.009302          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02946   0.009922          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02922   0.009819          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02876   0.009498          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02974   0.009743          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02944   0.009552          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02979   0.009448          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02975   0.009484          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.02975    0.00928          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      50/99      3.91G    0.03019   0.009185          0         25        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.768      0.708      0.713      0.388\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03125   0.006145          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03239   0.006941          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03175   0.007133          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03109   0.006474          0         17        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03232   0.007385          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03243   0.007371          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03187   0.007373          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03222   0.007614          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G     0.0321   0.007601          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03222     0.0076          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03193   0.007674          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03147   0.007793          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      51/99      3.91G    0.03084   0.007611          0         21        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.761      0.645      0.676      0.351\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02431   0.004921          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02781   0.007116          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02826   0.007232          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02899   0.009353          0         48        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02889   0.008947          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.03004   0.008974          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.03016   0.008848          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G     0.0297   0.008905          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.03003   0.008889          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02986   0.008844          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02991   0.008846          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G    0.02993   0.009169          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      52/99      3.91G     0.0303   0.009086          0         39        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.806      0.654       0.69      0.392\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02924   0.007353          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02978   0.009106          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02994    0.00929          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02969   0.009282          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.03019   0.009673          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.03031   0.009446          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02963   0.009208          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.03002   0.009021          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G     0.0297   0.009034          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02963   0.008846          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02956    0.00894          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02943   0.008933          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      53/99      3.91G    0.02951   0.009294          0         49        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.793      0.674      0.687      0.346\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.03154   0.007927          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.03022   0.008617          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.03021   0.008527          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02833   0.007724          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02896   0.008044          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02863   0.008063          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02847   0.007971          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02798   0.007829          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02767   0.007627          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02734   0.007803          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02756   0.007983          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02756   0.007967          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      54/99      3.91G    0.02761    0.00803          0         31        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.753      0.674      0.676      0.366\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02915   0.008724          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02661   0.007863          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02721   0.008109          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G     0.0267   0.008321          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02691   0.007766          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02796   0.008104          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02758   0.007869          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02786   0.007638          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02807   0.007363          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02775   0.007591          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02802   0.007922          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02782   0.008056          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      55/99      3.91G    0.02801   0.008115          0         34        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.795      0.708      0.713      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.03033   0.008545          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.03097   0.008435          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.03056   0.008309          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02974   0.008003          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02916   0.008346          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02954   0.008264          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02952   0.008046          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02885   0.007755          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02847   0.007781          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02795   0.007821          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02766   0.007813          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02773   0.007704          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      56/99      3.91G    0.02796   0.007692          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.811      0.674      0.709      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02642   0.006577          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02839    0.00821          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02747   0.007623          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02729   0.007558          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G     0.0289   0.007226          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G     0.0293   0.007746          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02914   0.008176          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02953   0.008446          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02888   0.008284          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02858   0.008319          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G    0.02838   0.008207          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G     0.0282   0.008197          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      57/99      3.91G     0.0284   0.008227          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.82      0.666      0.713      0.388\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.03222    0.01289          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02852    0.01023          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02837   0.008942          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02737   0.008785          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02661   0.008198          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02659   0.007737          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G     0.0272   0.007651          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02724    0.00765          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02703   0.007415          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02746   0.007322          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02715   0.007156          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02735   0.007045          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      58/99      3.91G    0.02741   0.007317          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.793      0.708      0.707      0.375\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G     0.0277    0.00691          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02941   0.007209          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02831   0.008237          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02788   0.008568          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02734   0.008308          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02924   0.008133          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.03004   0.008329          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.03072   0.008312          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.03025   0.008292          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G     0.0298    0.00815          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02941   0.008358          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02926   0.008595          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      59/99      3.91G    0.02903   0.008564          0         31        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.809      0.667      0.688      0.385\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02384   0.007945          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02574   0.007922          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02571   0.007774          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02656   0.007469          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02704   0.007398          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02651   0.007261          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02648   0.007735          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02638   0.007755          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02628   0.007725          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02621   0.007717          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02623    0.00768          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G     0.0262   0.007528          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      60/99      3.91G    0.02657   0.007665          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.793      0.674      0.708      0.387\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02865   0.008495          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02905   0.007366          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02869   0.007038          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02817   0.007205          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02724   0.006901          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02636   0.007013          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02609   0.006975          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02578   0.007092          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02574   0.007142          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02574   0.006929          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02578   0.006929          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02571   0.007167          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      61/99      3.91G    0.02587   0.007423          0         51        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.805      0.697      0.701      0.392\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02278   0.006228          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02435   0.007327          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02525   0.007005          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02522   0.006862          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02591   0.006901          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02583   0.007002          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02541   0.006918          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02568   0.007093          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02634   0.007331          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02629   0.007644          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02614   0.007818          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02611   0.008018          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      62/99      3.91G    0.02639   0.007894          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.778      0.668       0.68      0.373\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02253   0.007884          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02632   0.008363          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02561   0.007646          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02522   0.007648          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02576   0.007707          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02583   0.007506          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G     0.0265   0.007456          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02667   0.007625          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02767    0.00823          0         65        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02737   0.008296          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02744   0.008155          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02708   0.008183          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      63/99      3.91G    0.02703   0.008252          0         31        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.794      0.652      0.667      0.378\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02636   0.007901          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02744   0.007473          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02771   0.008288          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02796   0.008455          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02782   0.008569          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02741   0.008737          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02717   0.008457          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02657   0.008231          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02662   0.008194          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02649    0.00835          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02627   0.008377          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G     0.0265   0.008599          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      64/99      3.91G    0.02651   0.008627          0         48        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.79      0.674      0.688      0.399\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02271   0.007558          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02349   0.007154          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02304   0.006702          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02475   0.007437          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02675   0.008106          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02632   0.008147          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02607   0.008241          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02587   0.008308          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02585   0.007903          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02611   0.007843          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02618   0.007951          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G     0.0259   0.007907          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      65/99      3.91G    0.02573   0.007878          0         29        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.811      0.677      0.695       0.39\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02882   0.007858          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02547   0.006762          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02456   0.006872          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02419   0.006829          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02432   0.006909          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02399   0.007274          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02361     0.0072          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02414   0.007084          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02404   0.007266          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02393   0.007228          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02418   0.007235          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02434   0.007242          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      66/99      3.91G    0.02455   0.007195          0         27        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.731      0.719      0.701      0.397\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02818   0.008058          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G     0.0284   0.008395          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02605   0.007582          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02504   0.007245          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02604   0.007119          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02558   0.006803          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02568   0.007565          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02618   0.007564          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02619   0.007551          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G     0.0263   0.007628          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02587   0.007569          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02579   0.007492          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      67/99      3.91G    0.02577   0.007348          0         27        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.759      0.697      0.694        0.4\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G     0.0243    0.01026          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02436   0.008341          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02392   0.007719          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02333   0.007668          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02308    0.00714          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02418   0.007148          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02418   0.007267          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02414     0.0072          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02432    0.00725          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02422   0.007188          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02487    0.00746          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02513   0.007417          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      68/99      3.91G    0.02491   0.007455          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.763      0.719      0.709      0.366\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02427   0.008692          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02343   0.007291          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02467   0.009458          0         70        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02434   0.008543          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02349   0.007618          0         17        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02387   0.007638          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02434   0.007939          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02437   0.008063          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02443   0.007895          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02456   0.007663          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02452   0.007612          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02458   0.007423          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      69/99      3.91G    0.02503   0.007647          0         34        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.772      0.723      0.709      0.368\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02426   0.006893          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02541    0.00749          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02362   0.006579          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02431   0.007186          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G      0.024   0.007523          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02406   0.007888          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02379   0.007634          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02395    0.00806          0         46        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02423   0.008119          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02424   0.007969          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G     0.0246    0.00796          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02441   0.008021          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      70/99      3.91G    0.02432   0.007991          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.79      0.719      0.716      0.363\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02536   0.006974          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02476   0.007056          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02448   0.007268          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02521   0.007552          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G     0.0246    0.00723          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G     0.0242   0.007183          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G     0.0243   0.007282          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02434   0.006882          0         16        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02483   0.007035          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02464   0.007141          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02441   0.007197          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G    0.02419   0.007057          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      71/99      3.91G     0.0245   0.007246          0         44        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.807       0.73      0.719      0.392\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02359   0.008002          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02535      0.008          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02599   0.007668          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02486   0.007411          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02385   0.007425          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02425   0.007312          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02389   0.007252          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02381   0.007457          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02421   0.007725          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02422   0.007852          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02399   0.007678          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G    0.02414   0.007895          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      72/99      3.91G     0.0241   0.007847          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.804      0.738      0.722      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02195   0.005127          0         18        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02354   0.006231          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02264   0.006392          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02307    0.00719          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02347   0.007631          0         49        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02332   0.007548          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G     0.0232   0.007238          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02283   0.007072          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02304   0.006986          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02314   0.007034          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02333   0.007025          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02345   0.007084          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      73/99      3.91G    0.02355   0.006939          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.843       0.73      0.737      0.398\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02373   0.005036          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02387   0.005948          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02394   0.006117          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02457   0.006448          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02422    0.00695          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02407   0.007091          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02411   0.007226          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02359   0.007051          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02343   0.007012          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02352   0.007059          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02341   0.007136          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02318   0.007095          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      74/99      3.91G    0.02332   0.007158          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.865      0.719      0.743       0.42\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02378   0.005938          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02181    0.00571          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02188    0.00568          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02232   0.006126          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02253   0.006256          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02276   0.006346          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02271   0.006176          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02271   0.006258          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G     0.0226   0.006398          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02231   0.006241          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02239   0.006217          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02228   0.006235          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      75/99      3.91G    0.02223   0.006329          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.82      0.753      0.733      0.404\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.01991   0.004782          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02191   0.006531          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02182    0.00675          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02184   0.006894          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02206   0.006737          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02257   0.007158          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02259   0.007092          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02281    0.00697          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02259   0.006744          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02261    0.00693          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G     0.0227   0.006963          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G    0.02271   0.006969          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      76/99      3.91G     0.0229   0.007047          0         32        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.809       0.73      0.727      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02164    0.01063          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02289   0.009348          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02358   0.008096          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02364    0.00767          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02317   0.007446          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02343   0.007789          0         48        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G     0.0236   0.007764          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02337   0.007376          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02329   0.007348          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02295   0.007285          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G      0.023    0.00735          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02321   0.007445          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      77/99      3.91G    0.02326   0.007514          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.813      0.733      0.723      0.391\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02111   0.007233          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02085   0.006426          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02187   0.007092          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G     0.0221   0.007278          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02293   0.007382          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02351   0.007465          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02286   0.007273          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02259   0.007387          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G     0.0225    0.00727          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02278   0.007335          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02259   0.007309          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02233   0.007279          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      78/99      3.91G    0.02221   0.007192          0         22        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.784      0.708      0.685      0.373\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02496     0.0088          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02553    0.00739          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02443    0.00685          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02566   0.007485          0         48        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02546   0.007653          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02541   0.008039          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02535   0.007956          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02521   0.007739          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02472   0.007718          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02444    0.00758          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02437   0.007508          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02381   0.007326          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      79/99      3.91G    0.02401   0.007594          0         49        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.797       0.73       0.71      0.379\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.01904   0.007289          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G     0.0226   0.006704          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02306   0.006653          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02301   0.006707          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G     0.0234   0.006802          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02276   0.006635          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02236   0.006664          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02211   0.006788          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G     0.0222    0.00664          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02239   0.006507          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02256   0.006721          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02269   0.006906          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      80/99      3.91G    0.02257    0.00701          0         40        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.814      0.738      0.708      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02092    0.00703          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02132   0.007351          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02134    0.00698          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G     0.0211   0.006761          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02113   0.007121          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02125   0.006791          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02128   0.006954          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02094    0.00689          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02046   0.006736          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02014   0.006463          0         17        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02021   0.006267          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02011   0.006321          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      81/99      3.91G    0.02014    0.00637          0         36        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.812      0.742      0.716      0.382\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.01713   0.006195          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.01846   0.006834          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.01863   0.006006          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02074   0.006378          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G     0.0208   0.006083          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02088   0.006459          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02087    0.00652          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02057   0.006372          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02077   0.006169          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G     0.0209   0.006214          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02118   0.006329          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02108     0.0063          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      82/99      3.91G    0.02077    0.00621          0         21        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.793      0.733      0.707      0.377\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02389   0.009445          0         47        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02271   0.008113          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02137   0.007656          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02175   0.007708          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02146   0.008483          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02137   0.008027          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02092   0.007678          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G     0.0212   0.007445          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02106   0.007405          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02115   0.007538          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02097   0.007469          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02106    0.00759          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      83/99      3.91G    0.02077   0.007392          0         21        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.803      0.734      0.718      0.398\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02309   0.007897          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G     0.0233   0.007342          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02341   0.007476          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02267   0.008428          0         50        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02187   0.008051          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G     0.0213   0.007678          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02062   0.007605          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02062   0.007469          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02068   0.007429          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02047   0.007281          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02058   0.007182          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02087   0.007261          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      84/99      3.91G    0.02073   0.007225          0         36        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.834      0.708       0.72      0.402\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02157    0.00598          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.01984   0.005353          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02053   0.006077          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02011   0.005679          0         20        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02079   0.005997          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02174   0.006112          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02174   0.006179          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02167   0.006301          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02177   0.006654          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02192   0.006675          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02169   0.006709          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02148   0.006664          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      85/99      3.91G    0.02153    0.00664          0         24        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.825      0.719      0.717      0.403\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02061    0.00611          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02048   0.005908          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.01948   0.005854          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02016   0.006377          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02115   0.006876          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02162   0.007197          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02205   0.007274          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02164   0.006947          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02173   0.006868          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02161   0.006794          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02164   0.006824          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G     0.0214   0.006763          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      86/99      3.91G    0.02154   0.006923          0         31        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89       0.83      0.713      0.715      0.408\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02298   0.006745          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02303   0.005539          0         19        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02269    0.00599          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02245   0.006516          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02217   0.006747          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02177   0.006639          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02171   0.006593          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02162   0.006576          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02152    0.00671          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02176   0.006692          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02149   0.006588          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G     0.0213   0.006623          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      87/99      3.91G    0.02143   0.006592          0         20        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.838      0.719       0.72      0.413\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01829    0.00529          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01927   0.006715          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01941   0.007272          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01954   0.007188          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.02001   0.007088          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01984   0.007039          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01976   0.006887          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01986   0.007231          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01981   0.007054          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01982    0.00701          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G     0.0198   0.007111          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.01993   0.007174          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      88/99      3.91G    0.02042    0.00716          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.828      0.705      0.705      0.392\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02089   0.007405          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02211   0.008443          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02248   0.007501          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02189   0.007525          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02098   0.007174          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02061    0.00694          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02035   0.006843          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02047   0.006816          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02037   0.006943          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02044   0.007313          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02027   0.007166          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G    0.02027   0.007013          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      89/99      3.91G     0.0204   0.007032          0         27        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.841      0.715      0.717      0.402\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02018   0.006075          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02081   0.006016          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G     0.0211   0.006869          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02075    0.00619          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G      0.022   0.006652          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02209   0.006529          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02166   0.006806          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02109   0.006568          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02153   0.006792          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G     0.0211   0.006679          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02125   0.006626          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02089   0.006631          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      90/99      3.91G    0.02101   0.006682          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.815      0.693      0.694      0.398\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01999   0.008335          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01865   0.007126          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.02006   0.007217          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.02022   0.006961          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.02032   0.006852          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01998   0.006784          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01974   0.006831          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01962   0.006701          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01955   0.006733          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01971   0.006745          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01982   0.006772          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01991   0.006599          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      91/99      3.91G    0.01973   0.006486          0         25        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.818      0.708      0.705      0.401\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02258   0.009299          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02277   0.009311          0         45        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02161   0.008432          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02012   0.007491          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02034    0.00737          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.02011    0.00696          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01972   0.006733          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01971   0.006643          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G     0.0196   0.006447          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01936   0.006362          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01949   0.006448          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01937   0.006413          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      92/99      3.91G    0.01941   0.006387          0         34        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.815      0.708       0.71      0.394\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.01981    0.00646          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.01897   0.006018          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G     0.0204   0.006233          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02063   0.006089          0         22        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02053   0.005969          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02046    0.00621          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02022   0.006331          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02032   0.006575          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02064    0.00665          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02049   0.006759          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02063   0.006955          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02056   0.006903          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      93/99      3.91G    0.02057   0.007024          0         38        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.796      0.719      0.712      0.393\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02537   0.006595          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02262   0.005991          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02107   0.006718          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02112   0.006749          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02257   0.006991          0         41        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02159   0.007121          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02092    0.00691          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.02011   0.006703          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.01945   0.006507          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.01944   0.006476          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.01936   0.006344          0         23        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G    0.01956   0.006318          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      94/99      3.91G     0.0196   0.006243          0         26        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.806       0.73      0.724      0.395\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01795   0.005458          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01859   0.006187          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01925   0.006576          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G     0.0194   0.006847          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G      0.019   0.006929          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01921   0.006901          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01925   0.006808          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G     0.0191   0.006664          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01888   0.006617          0         36        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01871   0.006538          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G     0.0185   0.006356          0         18        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01886   0.006431          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      95/99      3.91G    0.01875   0.006365          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.814      0.738      0.724      0.394\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01679   0.007366          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01828   0.007748          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01888   0.007896          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01855   0.007172          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01864   0.006848          0         38        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01847   0.006835          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01876   0.006922          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G     0.0188   0.006807          0         31        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01883   0.006723          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01869   0.006585          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01898   0.006656          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01886   0.006656          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      96/99      3.91G    0.01868   0.006714          0         33        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.797       0.73       0.71       0.39\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01883   0.005486          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01923   0.006867          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G     0.0184   0.006338          0         27        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01894    0.00694          0         39        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01839   0.006584          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01842   0.006373          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01797   0.006106          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01789   0.006294          0         37        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01802   0.006218          0         26        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01821   0.006104          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01845   0.006128          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01835   0.006288          0         40        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      97/99      3.91G    0.01887   0.006555          0         40        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.804      0.742      0.721      0.395\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01887   0.006097          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01929   0.006463          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01993   0.006873          0         44        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01988   0.006772          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01974    0.00677          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01968   0.006779          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01952   0.006819          0         33        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01927   0.006743          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01948   0.006845          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G     0.0196   0.006765          0         28        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01953   0.006631          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01951   0.006518          0         24        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      98/99      3.91G    0.01947   0.006469          0         28        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.799       0.73       0.71      0.388\n\n      Epoch    GPU_mem   box_loss   obj_loss   cls_loss  Instances       Size\n  0%|          | 0/13 [00:00<?, ?it/s]/kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01889   0.006132          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01956   0.007471          0         42        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01936   0.007078          0         29        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01979   0.006382          0         21        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01929    0.00661          0         43        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01878   0.006362          0         30        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01908   0.006471          0         34        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G      0.019   0.006555          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01887   0.006347          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01891    0.00634          0         32        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G     0.0188   0.006348          0         35        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01853   0.006273          0         25        640:  /kaggle/working/yolov5/train.py:412: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.amp.autocast(amp):\n      99/99      3.91G    0.01852   0.006165          0         25        640: 1\n                 Class     Images  Instances          P          R      mAP50   \n                   all         59         89      0.794       0.73      0.711       0.39\n\n100 epochs completed in 0.100 hours.\nOptimizer stripped from yolov5/runs/train/train_results5/weights/last.pt, 14.4MB\nResults saved to \u001b[1myolov5/runs/train/train_results5\u001b[0m\n","output_type":"stream"}]},{"cell_type":"code","source":"!python /kaggle/working/yolov5/detect.py --weights /kaggle/working/yolov5/runs/train/train_results5/weights/last.pt --img 640 --conf 0.10 --source /kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.jpg --save-crop","metadata":{"execution":{"iopub.status.busy":"2024-08-14T14:44:33.879524Z","iopub.execute_input":"2024-08-14T14:44:33.880213Z","iopub.status.idle":"2024-08-14T14:44:42.427584Z","shell.execute_reply.started":"2024-08-14T14:44:33.880174Z","shell.execute_reply":"2024-08-14T14:44:42.426555Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"\u001b[34m\u001b[1mdetect: \u001b[0mweights=['/kaggle/working/yolov5/runs/train/train_results5/weights/last.pt'], source=/kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.jpg, data=yolov5/data/coco128.yaml, imgsz=[640, 640], conf_thres=0.1, iou_thres=0.45, max_det=1000, device=, view_img=False, save_txt=False, save_csv=False, save_conf=False, save_crop=False, nosave=False, classes=None, agnostic_nms=False, augment=False, visualize=False, update=False, project=yolov5/runs/detect, name=exp, exist_ok=False, line_thickness=3, hide_labels=False, hide_conf=False, half=False, dnn=False, vid_stride=1\nYOLOv5 🚀 v7.0-351-g19ce9029 Python-3.10.13 torch-2.4.0+cu121 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\n\nFusing layers... \nModel summary: 157 layers, 7012822 parameters, 0 gradients, 15.8 GFLOPs\nimage 1/1 /kaggle/input/alpdr-dataset/ALPDR_data/train/images/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.jpg: 640x640 1 licenseplate, 6.7ms\nSpeed: 0.6ms pre-process, 6.7ms inference, 137.5ms NMS per image at shape (1, 3, 640, 640)\nResults saved to \u001b[1myolov5/runs/detect/exp7\u001b[0m\n","output_type":"stream"}]},{"cell_type":"code","source":"Image(filename=\"/kaggle/working/yolov5/runs/detect/exp5/crops/licenseplate/Cars101_png.rf.f37439af92c6b6caa2ecc8f373f1b785.jpg\")","metadata":{"execution":{"iopub.status.busy":"2024-08-14T14:45:09.901164Z","iopub.execute_input":"2024-08-14T14:45:09.901601Z","iopub.status.idle":"2024-08-14T14:45:09.911445Z","shell.execute_reply.started":"2024-08-14T14:45:09.901565Z","shell.execute_reply":"2024-08-14T14:45:09.910495Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"image/jpeg":"","text/plain":"<IPython.core.display.Image object>"},"metadata":{}}]},{"cell_type":"markdown","source":"## SAVE THE MODEL","metadata":{}},{"cell_type":"code","source":"import shutil\n\nsrc_path = '/kaggle/working/yolov5/runs/train/train_results5/weights/last.pt'\n\ndest_dir = '/kaggle/working/model'\n\nshutil.copy(src_path, dest_dir)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T14:29:30.260834Z","iopub.execute_input":"2024-08-14T14:29:30.261584Z","iopub.status.idle":"2024-08-14T14:29:30.281638Z","shell.execute_reply.started":"2024-08-14T14:29:30.261551Z","shell.execute_reply":"2024-08-14T14:29:30.280743Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/model/last.pt'"},"metadata":{}}]},{"cell_type":"markdown","source":"## RUN THE MODEL","metadata":{}},{"cell_type":"code","source":"import torch\nfrom pathlib import Path\nfrom PIL import Image\nimport matplotlib.pyplot as plt\n\nmodel_path = '/kaggle/working/model/last.pt'\nmodel = torch.hub.load('ultralytics/yolov5', 'custom', path=model_path)\n\ndef detect_image(image_path):\n    img = Image.open(image_path)\n    results = model(img)\n\n    print(results.pandas().xyxy[0])\n    \n    cropped_dir = Path(\"/kaggle/working/crop\")\n\n    results.show()\n    \n    for idx, cropped_image in enumerate(results.pandas().xyxy[0].to_dict('records')):\n        xmin, ymin, xmax, ymax = map(int, [cropped_image['xmin'], cropped_image['ymin'], cropped_image['xmax'], cropped_image['ymax']])\n  \n        cropped_img = img.crop((xmin, ymin, xmax, ymax))\n  \n        cropped_image_path = cropped_dir / f'cropped_{idx}.jpg'\n        cropped_img.save(cropped_image_path)\n        print(f'Cropped image saved to {cropped_image_path}')\n","metadata":{"execution":{"iopub.status.busy":"2024-08-14T15:18:30.811735Z","iopub.execute_input":"2024-08-14T15:18:30.812490Z","iopub.status.idle":"2024-08-14T15:18:31.416565Z","shell.execute_reply.started":"2024-08-14T15:18:30.812455Z","shell.execute_reply":"2024-08-14T15:18:31.415653Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stderr","text":"Using cache found in /root/.cache/torch/hub/ultralytics_yolov5_master\nYOLOv5 🚀 2024-8-14 Python-3.10.13 torch-2.4.0+cu121 CUDA:0 (Tesla P100-PCIE-16GB, 16269MiB)\n\nFusing layers... \nModel summary: 157 layers, 7012822 parameters, 0 gradients, 15.8 GFLOPs\nAdding AutoShape... \n/root/.cache/torch/hub/ultralytics_yolov5_master/models/common.py:869: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with amp.autocast(autocast):\n","output_type":"stream"},{"name":"stdout","text":"         xmin        ymin        xmax        ymax  confidence  class  \\\n0   45.042603  410.858002   86.844421  430.504730    0.929815      0   \n1  268.415558  430.330963  315.699371  451.983673    0.910286      0   \n2  504.820343  384.180023  529.963501  402.941986    0.908625      0   \n3  615.796387  368.522949  639.046875  382.386597    0.773709      0   \n\n           name  \n0  licenseplate  \n1  licenseplate  \n2  licenseplate  \n3  licenseplate  \n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<PIL.Image.Image image mode=RGB size=640x640>","image/png":"","image/jpeg":"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"},"metadata":{}},{"name":"stdout","text":"Cropped image saved to /kaggle/working/crop/cropped_0.jpg\nCropped image saved to /kaggle/working/crop/cropped_1.jpg\nCropped image saved to /kaggle/working/crop/cropped_2.jpg\nCropped image saved to /kaggle/working/crop/cropped_3.jpg\n","output_type":"stream"}]},{"cell_type":"code","source":"image_path = '/kaggle/input/alpdr-dataset/ALPDR_data/test/images/Cars205_png.rf.9992d228b476f6b0972cd7b6d35afbc9.jpg'  \ndetect_image(image_path)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T15:21:34.961906Z","iopub.execute_input":"2024-08-14T15:21:34.962525Z","iopub.status.idle":"2024-08-14T15:21:35.048807Z","shell.execute_reply.started":"2024-08-14T15:21:34.962490Z","shell.execute_reply":"2024-08-14T15:21:35.047870Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stdout","text":"         xmin        ymin        xmax        ymax  confidence  class  \\\n0  247.546921  264.972992  353.283539  312.035065    0.929686      0   \n1  498.159882  621.146484  632.875244  639.716797    0.575511      0   \n\n           name  \n0  licenseplate  \n1  licenseplate  \n","output_type":"stream"},{"name":"stderr","text":"/root/.cache/torch/hub/ultralytics_yolov5_master/models/common.py:869: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with amp.autocast(autocast):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<PIL.Image.Image image mode=RGB size=640x640>","image/png":"","image/jpeg":""},"metadata":{}},{"name":"stdout","text":"Cropped image saved to /kaggle/working/crop/cropped_0.jpg\nCropped image saved to /kaggle/working/crop/cropped_1.jpg\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}